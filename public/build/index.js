
(function(l, r) { if (!l || l.getElementById('livereloadscript')) return; r = l.createElement('script'); r.async = 1; r.src = '//' + (self.location.host || 'localhost').split(':')[0] + ':35729/livereload.js?snipver=1'; r.id = 'livereloadscript'; l.getElementsByTagName('head')[0].appendChild(r) })(self.document);
import { S as SvelteComponentDev, i as init, s as safe_not_equal, d as dispatch_dev, v as validate_slots, l as link, e as element, a as svg_element, t as text, b as attr_dev, c as add_location, f as insert_dev, g as append_dev, h as action_destroyer, n as noop, j as detach_dev, w as writable, k as validate_store, m as component_subscribe, o as space, p as listen_dev, q as set_store_value, r as create_component, u as mount_component, x as transition_in, y as transition_out, z as destroy_component, A as xlink_attr, B as fade, C as add_render_callback, D as create_bidirectional_transition, R as Router, E as wrap } from './vendor-22448507.js';

/* src/components/buttons/Home.svelte generated by Svelte v3.45.0 */
const file$a = "src/components/buttons/Home.svelte";

function create_fragment$b(ctx) {
	let a;
	let svg;
	let path;
	let t;
	let mounted;
	let dispose;

	const block = {
		c: function create() {
			a = element("a");
			svg = svg_element("svg");
			path = svg_element("path");
			t = text(" Deliberative");
			attr_dev(path, "d", "M10 20a10 10 0 1 1 0-20 10 10 0 0 1 0 20zm-5.6-4.29a9.95 9.95 0 0 1 11.2 0 8 8 0 1 0-11.2 0zm6.12-7.64l3.02-3.02 1.41 1.41-3.02 3.02a2 2 0 1 1-1.41-1.41z");
			add_location(path, file$a, 13, 5, 323);
			attr_dev(svg, "class", "h-8 fill-current text-indigo-600 pr-2");
			attr_dev(svg, "xmlns", "http://www.w3.org/2000/svg");
			attr_dev(svg, "viewBox", "0 0 20 20");
			add_location(svg, file$a, 9, 2, 200);
			attr_dev(a, "class", "flex items-center text-indigo-400 no-underline hover:no-underline font-bold text-2xl lg:text-4xl");
			attr_dev(a, "href", "/");
			add_location(a, file$a, 4, 0, 64);
		},
		l: function claim(nodes) {
			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
		},
		m: function mount(target, anchor) {
			insert_dev(target, a, anchor);
			append_dev(a, svg);
			append_dev(svg, path);
			append_dev(a, t);

			if (!mounted) {
				dispose = action_destroyer(link.call(null, a));
				mounted = true;
			}
		},
		p: noop,
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(a);
			mounted = false;
			dispose();
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$b.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$b($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots('Home', slots, []);
	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<Home> was created with unknown prop '${key}'`);
	});

	$$self.$capture_state = () => ({ link });
	return [];
}

class Home$1 extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$b, create_fragment$b, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Home",
			options,
			id: create_fragment$b.name
		});
	}
}

const localStorageThemeIsDark = localStorage.getItem('theme') === 'dark';
const localStorageThemeIsNull = localStorage.getItem('theme') === null;
const matchMediaDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
const isDarkMode = writable(localStorageThemeIsDark || (localStorageThemeIsNull && matchMediaDark));

/* src/components/buttons/ToggleDarkMode.svelte generated by Svelte v3.45.0 */
const file$9 = "src/components/buttons/ToggleDarkMode.svelte";

function create_fragment$a(ctx) {
	let button;
	let svg0;
	let path0;
	let t;
	let svg1;
	let path1;
	let mounted;
	let dispose;

	const block = {
		c: function create() {
			button = element("button");
			svg0 = svg_element("svg");
			path0 = svg_element("path");
			t = space();
			svg1 = svg_element("svg");
			path1 = svg_element("path");
			attr_dev(path0, "d", "M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z");
			add_location(path0, file$9, 45, 4, 1404);
			attr_dev(svg0, "id", "theme-toggle-dark-icon");
			attr_dev(svg0, "class", "w-5 h-5 hidden");
			attr_dev(svg0, "fill", "currentColor");
			attr_dev(svg0, "viewBox", "0 0 20 20");
			attr_dev(svg0, "xmlns", "http://www.w3.org/2000/svg");
			add_location(svg0, file$9, 38, 2, 1245);
			attr_dev(path1, "d", "M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z");
			attr_dev(path1, "fill-rule", "evenodd");
			attr_dev(path1, "clip-rule", "evenodd");
			add_location(path1, file$9, 55, 4, 1664);
			attr_dev(svg1, "id", "theme-toggle-light-icon");
			attr_dev(svg1, "class", "w-5 h-5 hidden");
			attr_dev(svg1, "fill", "currentColor");
			attr_dev(svg1, "viewBox", "0 0 20 20");
			attr_dev(svg1, "xmlns", "http://www.w3.org/2000/svg");
			add_location(svg1, file$9, 48, 2, 1504);
			attr_dev(button, "id", "theme-toggle");
			attr_dev(button, "type", "button");
			attr_dev(button, "class", "text-gray-500 dark:text-gray-400 hover:bg-gray-100 dark:hover:bg-gray-700 focus:outline-none focus:ring-4 focus:ring-gray-200 dark:focus:ring-gray-700 rounded-lg text-sm p-2.5");
			add_location(button, file$9, 32, 0, 984);
		},
		l: function claim(nodes) {
			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
		},
		m: function mount(target, anchor) {
			insert_dev(target, button, anchor);
			append_dev(button, svg0);
			append_dev(svg0, path0);
			append_dev(button, t);
			append_dev(button, svg1);
			append_dev(svg1, path1);

			if (!mounted) {
				dispose = listen_dev(button, "click", /*handleClick*/ ctx[0], false, false, false);
				mounted = true;
			}
		},
		p: noop,
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(button);
			mounted = false;
			dispose();
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$a.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$a($$self, $$props, $$invalidate) {
	let $isDarkMode;
	validate_store(isDarkMode, 'isDarkMode');
	component_subscribe($$self, isDarkMode, $$value => $$invalidate(1, $isDarkMode = $$value));
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots('ToggleDarkMode', slots, []);
	const themeToggleDarkIcon = document.getElementById('theme-toggle-dark-icon');
	const themeToggleLightIcon = document.getElementById('theme-toggle-light-icon');

	// Change the icons inside the button based on previous settings
	if (isDarkMode) {
		themeToggleLightIcon?.classList.remove('hidden');
	} else {
		themeToggleDarkIcon?.classList.remove('hidden');
	}

	const handleClick = () => {
		set_store_value(isDarkMode, $isDarkMode = !isDarkMode, $isDarkMode);
		themeToggleDarkIcon.classList.toggle('hidden');
		themeToggleLightIcon.classList.toggle('hidden');

		if (isDarkMode) {
			themeToggleLightIcon.classList.remove('hidden');
			document.documentElement.classList.add('dark');
			localStorage.setItem('theme', 'dark');
		} else {
			themeToggleDarkIcon.classList.remove('hidden');
			document.documentElement.classList.remove('dark');
			localStorage.setItem('theme', 'light');
		}
	};

	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<ToggleDarkMode> was created with unknown prop '${key}'`);
	});

	$$self.$capture_state = () => ({
		isDarkMode,
		themeToggleDarkIcon,
		themeToggleLightIcon,
		handleClick,
		$isDarkMode
	});

	return [handleClick];
}

class ToggleDarkMode extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$a, create_fragment$a, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "ToggleDarkMode",
			options,
			id: create_fragment$a.name
		});
	}
}

/* src/components/buttons/Menu.svelte generated by Svelte v3.45.0 */

const file$8 = "src/components/buttons/Menu.svelte";

function create_fragment$9(ctx) {
	let button;
	let span;
	let t1;
	let svg0;
	let path0;
	let t2;
	let svg1;
	let path1;

	const block = {
		c: function create() {
			button = element("button");
			span = element("span");
			span.textContent = "Open main menu";
			t1 = space();
			svg0 = svg_element("svg");
			path0 = svg_element("path");
			t2 = space();
			svg1 = svg_element("svg");
			path1 = svg_element("path");
			attr_dev(span, "class", "sr-only");
			add_location(span, file$8, 7, 2, 341);
			attr_dev(path0, "fill-rule", "evenodd");
			attr_dev(path0, "d", "M3 5a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 10a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 15a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z");
			attr_dev(path0, "clip-rule", "evenodd");
			add_location(path0, file$8, 13, 5, 504);
			attr_dev(svg0, "class", "w-6 h-6");
			attr_dev(svg0, "fill", "currentColor");
			attr_dev(svg0, "viewBox", "0 0 20 20");
			attr_dev(svg0, "xmlns", "http://www.w3.org/2000/svg");
			add_location(svg0, file$8, 8, 2, 387);
			attr_dev(path1, "fill-rule", "evenodd");
			attr_dev(path1, "d", "M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z");
			attr_dev(path1, "clip-rule", "evenodd");
			add_location(path1, file$8, 23, 5, 859);
			attr_dev(svg1, "class", "hidden w-6 h-6");
			attr_dev(svg1, "fill", "currentColor");
			attr_dev(svg1, "viewBox", "0 0 20 20");
			attr_dev(svg1, "xmlns", "http://www.w3.org/2000/svg");
			add_location(svg1, file$8, 18, 2, 735);
			attr_dev(button, "data-collapse-toggle", "mobile-menu-4");
			attr_dev(button, "type", "button");
			attr_dev(button, "class", "md:hidden text-gray-500 hover:bg-gray-100focus:outline-none focus:ring-2 focus:ring-gray-200 rounded-lg text-sm p-2 inline-flex items-center dark:text-gray-400 dark:hover:bg-gray-700 dark:focus:ring-gray-600");
			attr_dev(button, "aria-controls", "mobile-menu-4");
			attr_dev(button, "aria-expanded", "false");
			add_location(button, file$8, 0, 0, 0);
		},
		l: function claim(nodes) {
			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
		},
		m: function mount(target, anchor) {
			insert_dev(target, button, anchor);
			append_dev(button, span);
			append_dev(button, t1);
			append_dev(button, svg0);
			append_dev(svg0, path0);
			append_dev(button, t2);
			append_dev(button, svg1);
			append_dev(svg1, path1);
		},
		p: noop,
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(button);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$9.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$9($$self, $$props) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots('Menu', slots, []);
	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<Menu> was created with unknown prop '${key}'`);
	});

	return [];
}

class Menu extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$9, create_fragment$9, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Menu",
			options,
			id: create_fragment$9.name
		});
	}
}

/* src/components/Header.svelte generated by Svelte v3.45.0 */
const file$7 = "src/components/Header.svelte";

function create_fragment$8(ctx) {
	let header;
	let nav;
	let homebutton;
	let t0;
	let div;
	let toggledarkmode;
	let t1;
	let a0;
	let svg0;
	let path0;
	let t2;
	let a1;
	let svg1;
	let path1;
	let t3;
	let menu;
	let current;
	homebutton = new Home$1({ $$inline: true });
	toggledarkmode = new ToggleDarkMode({ $$inline: true });
	menu = new Menu({ $$inline: true });

	const block = {
		c: function create() {
			header = element("header");
			nav = element("nav");
			create_component(homebutton.$$.fragment);
			t0 = space();
			div = element("div");
			create_component(toggledarkmode.$$.fragment);
			t1 = space();
			a0 = element("a");
			svg0 = svg_element("svg");
			path0 = svg_element("path");
			t2 = space();
			a1 = element("a");
			svg1 = svg_element("svg");
			path1 = svg_element("path");
			t3 = space();
			create_component(menu.$$.fragment);
			attr_dev(path0, "d", "M30.063 7.313c-.813 1.125-1.75 2.125-2.875 2.938v.75c0 1.563-.188 3.125-.688 4.625a15.088 15.088 0 0 1-2.063 4.438c-.875 1.438-2 2.688-3.25 3.813a15.015 15.015 0 0 1-4.625 2.563c-1.813.688-3.75 1-5.75 1-3.25 0-6.188-.875-8.875-2.625.438.063.875.125 1.375.125 2.688 0 5.063-.875 7.188-2.5-1.25 0-2.375-.375-3.375-1.125s-1.688-1.688-2.063-2.875c.438.063.813.125 1.125.125.5 0 1-.063 1.5-.25-1.313-.25-2.438-.938-3.313-1.938a5.673 5.673 0 0 1-1.313-3.688v-.063c.813.438 1.688.688 2.625.688a5.228 5.228 0 0 1-1.875-2c-.5-.875-.688-1.813-.688-2.75 0-1.063.25-2.063.75-2.938 1.438 1.75 3.188 3.188 5.25 4.25s4.313 1.688 6.688 1.813a5.579 5.579 0 0 1 1.5-5.438c1.125-1.125 2.5-1.688 4.125-1.688s3.063.625 4.188 1.813a11.48 11.48 0 0 0 3.688-1.375c-.438 1.375-1.313 2.438-2.563 3.188 1.125-.125 2.188-.438 3.313-.875z");
			add_location(path0, file$7, 21, 11, 769);
			attr_dev(svg0, "class", "fill-current h-6");
			attr_dev(svg0, "xmlns", "http://www.w3.org/2000/svg");
			attr_dev(svg0, "viewBox", "0 0 32 32");
			add_location(svg0, file$7, 17, 8, 643);
			attr_dev(a0, "class", "inline-block text-blue-300 no-underline hover:text-indigo-800 hover:text-underline text-center h-10 p-2 md:h-auto md:p-4");
			attr_dev(a0, "data-tippy-content", "@twitter_handle");
			attr_dev(a0, "href", "https://twitter.com/intent/tweet?url=#");
			add_location(a0, file$7, 12, 6, 388);
			attr_dev(path1, "d", "M19 6h5V0h-5c-3.86 0-7 3.14-7 7v3H8v6h4v16h6V16h5l1-6h-6V7c0-.542.458-1 1-1z");
			add_location(path1, file$7, 35, 11, 2039);
			attr_dev(svg1, "class", "fill-current h-6");
			attr_dev(svg1, "xmlns", "http://www.w3.org/2000/svg");
			attr_dev(svg1, "viewBox", "0 0 32 32");
			add_location(svg1, file$7, 31, 8, 1913);
			attr_dev(a1, "class", "inline-block text-blue-300 no-underline hover:text-indigo-800 hover:text-underline text-center h-10 p-2 md:h-auto md:p-4 ");
			attr_dev(a1, "data-tippy-content", "#facebook_id");
			attr_dev(a1, "href", "https://www.facebook.com/sharer/sharer.php?u=#");
			add_location(a1, file$7, 26, 6, 1652);
			attr_dev(div, "class", "flex w-1/2 justify-end content-center");
			add_location(div, file$7, 10, 4, 305);
			attr_dev(nav, "class", "w-full flex items-center justify-between");
			add_location(nav, file$7, 7, 2, 226);
			attr_dev(header, "class", "w-full container mx-auto p-6");
			add_location(header, file$7, 6, 0, 178);
		},
		l: function claim(nodes) {
			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
		},
		m: function mount(target, anchor) {
			insert_dev(target, header, anchor);
			append_dev(header, nav);
			mount_component(homebutton, nav, null);
			append_dev(nav, t0);
			append_dev(nav, div);
			mount_component(toggledarkmode, div, null);
			append_dev(div, t1);
			append_dev(div, a0);
			append_dev(a0, svg0);
			append_dev(svg0, path0);
			append_dev(div, t2);
			append_dev(div, a1);
			append_dev(a1, svg1);
			append_dev(svg1, path1);
			append_dev(nav, t3);
			mount_component(menu, nav, null);
			current = true;
		},
		p: noop,
		i: function intro(local) {
			if (current) return;
			transition_in(homebutton.$$.fragment, local);
			transition_in(toggledarkmode.$$.fragment, local);
			transition_in(menu.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(homebutton.$$.fragment, local);
			transition_out(toggledarkmode.$$.fragment, local);
			transition_out(menu.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(header);
			destroy_component(homebutton);
			destroy_component(toggledarkmode);
			destroy_component(menu);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$8.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$8($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots('Header', slots, []);
	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<Header> was created with unknown prop '${key}'`);
	});

	$$self.$capture_state = () => ({ HomeButton: Home$1, ToggleDarkMode, Menu });
	return [];
}

class Header extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$8, create_fragment$8, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Header",
			options,
			id: create_fragment$8.name
		});
	}
}

/* src/components/buttons/AppStore.svelte generated by Svelte v3.45.0 */

const file$6 = "src/components/buttons/AppStore.svelte";

function create_fragment$7(ctx) {
	let button;
	let svg;
	let title;
	let t0;
	let desc;
	let t1;
	let defs;
	let g5;
	let g4;
	let g3;
	let rect;
	let g0;
	let path0;
	let path1;
	let g1;
	let path2;
	let path3;
	let path4;
	let path5;
	let path6;
	let path7;
	let path8;
	let path9;
	let g2;
	let path10;
	let path11;
	let path12;
	let path13;
	let path14;
	let path15;
	let path16;
	let path17;
	let path18;
	let path19;
	let path20;
	let path21;
	let path22;
	let path23;

	const block = {
		c: function create() {
			button = element("button");
			svg = svg_element("svg");
			title = svg_element("title");
			t0 = text("App Store");
			desc = svg_element("desc");
			t1 = text("Created with Sketch.");
			defs = svg_element("defs");
			g5 = svg_element("g");
			g4 = svg_element("g");
			g3 = svg_element("g");
			rect = svg_element("rect");
			g0 = svg_element("g");
			path0 = svg_element("path");
			path1 = svg_element("path");
			g1 = svg_element("g");
			path2 = svg_element("path");
			path3 = svg_element("path");
			path4 = svg_element("path");
			path5 = svg_element("path");
			path6 = svg_element("path");
			path7 = svg_element("path");
			path8 = svg_element("path");
			path9 = svg_element("path");
			g2 = svg_element("g");
			path10 = svg_element("path");
			path11 = svg_element("path");
			path12 = svg_element("path");
			path13 = svg_element("path");
			path14 = svg_element("path");
			path15 = svg_element("path");
			path16 = svg_element("path");
			path17 = svg_element("path");
			path18 = svg_element("path");
			path19 = svg_element("path");
			path20 = svg_element("path");
			path21 = svg_element("path");
			path22 = svg_element("path");
			path23 = svg_element("path");
			add_location(title, file$6, 10, 4, 336);
			add_location(desc, file$6, 11, 4, 365);
			add_location(defs, file$6, 12, 4, 403);
			attr_dev(rect, "id", "background");
			attr_dev(rect, "fill", "#000000");
			attr_dev(rect, "sketch:type", "MSShapeGroup");
			attr_dev(rect, "x", "0");
			attr_dev(rect, "y", "0");
			attr_dev(rect, "width", "1477");
			attr_dev(rect, "height", "500");
			attr_dev(rect, "rx", "60");
			add_location(rect, file$6, 31, 10, 846);
			attr_dev(path0, "d", "M192.340766,150.55423 C192.018956,114.788858 221.625537,97.3888881 222.979361,96.5788129 C206.211916,72.132299 180.22293,68.7921262 171.090165,68.5258002 C149.262524,66.2287378 128.089602,81.5868745 116.970488,81.5868745 C105.629437,81.5868745 88.5068896,68.7477385 70.0527122,69.1250338 C46.3053043,69.4912322 24.0892712,83.2403156 11.9048535,104.590789 C-13.2407663,148.124005 5.5130278,212.097746 29.6044403,247.286078 C41.655695,264.530691 55.737686,283.761653 74.1696694,283.084741 C92.2021638,282.352344 98.937994,271.588332 120.699053,271.588332 C142.260368,271.588332 148.585612,283.084741 167.383794,282.640864 C186.736822,282.352344 198.92124,265.340766 210.550811,247.940796 C224.477446,228.210473 230.070293,208.735379 230.292231,207.736657 C229.848355,207.592397 192.718062,193.42163 192.340766,150.55423");
			attr_dev(path0, "id", "Fill-2");
			add_location(path0, file$6, 46, 12, 1242);
			attr_dev(path1, "d", "M156.830624,45.3776258 C166.529331,33.2486927 173.165289,16.7475733 171.323201,0.00232156273 C157.285597,0.623749061 139.73027,9.71212622 129.620977,21.5747333 C120.67686,32.0280316 112.687077,49.1616754 114.751104,65.2744027 C130.519827,66.4506762 146.710233,57.3179113 156.830624,45.3776258");
			attr_dev(path1, "id", "Fill-3");
			add_location(path1, file$6, 49, 12, 2130);
			attr_dev(g0, "id", "icon");
			attr_dev(g0, "transform", "translate(131.000000, 88.000000)");
			attr_dev(g0, "fill", "#FFFFFF");
			attr_dev(g0, "sketch:type", "MSShapeGroup");
			add_location(g0, file$6, 40, 10, 1070);
			attr_dev(path2, "d", "M124.528963,149.610128 L99.3278588,149.610128 L85.5232908,106.232269 L37.5402104,106.232269 L24.3903606,149.610128 L-0.144928625,149.610128 L47.4053719,1.93232156 L76.7678212,1.93232156 L124.528963,149.610128 L124.528963,149.610128 Z M81.3619459,88.0333208 L68.8779113,49.4826221 C67.5573779,45.5321187 65.0716679,36.2550939 61.4318783,21.6515477 L60.9880015,21.6515477 C59.5232081,27.9324042 57.1817581,37.209429 53.9747483,49.4826221 L41.7015552,88.0333208 L81.3619459,88.0333208 L81.3619459,88.0333208 Z");
			attr_dev(path2, "id", "Fill-4");
			add_location(path2, file$6, 58, 12, 2657);
			attr_dev(path3, "d", "M246.572885,95.0576709 C246.572885,113.167844 241.65695,127.48287 231.813982,137.991653 C223.003028,147.346356 212.050368,152.018159 198.989294,152.018159 C184.885109,152.018159 174.742524,146.991255 168.583734,136.904155 L168.583734,192.777145 L144.925101,192.777145 L144.925101,78.1237716 C144.925101,66.749429 144.625485,55.0865665 144.048445,43.1240872 L164.855169,43.1240872 L166.175702,60.0135988 L166.619579,60.0135988 C174.509489,47.285432 186.483065,40.9268971 202.551405,40.9268971 C215.113118,40.9268971 225.599707,45.8872201 233.988978,55.8189632 C242.367153,65.7729001 246.572885,78.8450714 246.572885,95.0576709 L246.572885,95.0576709 Z M222.470376,95.9232307 C222.470376,85.5587077 220.140023,77.0140796 215.457122,70.2893464 C210.341443,63.2871901 203.472449,59.7694666 194.86124,59.7694666 C189.02426,59.7694666 183.719932,61.7225244 178.981548,65.5842524 C174.232066,69.4570774 171.124929,74.5283696 169.671232,80.8203231 C168.938835,83.7388129 168.572637,86.1246506 168.572637,88.011127 L168.572637,105.788392 C168.572637,113.511848 170.947378,120.047934 175.69686,125.396649 C180.446341,130.723171 186.616228,133.397528 194.206521,133.397528 C203.117348,133.397528 210.052923,129.946386 215.013246,123.099587 C219.984666,116.230594 222.470376,107.175507 222.470376,95.9232307 L222.470376,95.9232307 Z");
			attr_dev(path3, "id", "Fill-5");
			add_location(path3, file$6, 61, 12, 3234);
			attr_dev(path4, "d", "M369.049587,95.0576709 C369.049587,113.167844 364.133651,127.48287 354.290684,137.991653 C345.468633,147.346356 334.52707,152.018159 321.454899,152.018159 C307.361811,152.018159 297.219226,146.991255 291.049339,136.904155 L291.049339,192.777145 L267.390706,192.777145 L267.390706,78.1237716 C267.390706,66.749429 267.091089,55.0865665 266.51405,43.1240872 L287.320774,43.1240872 L288.641307,60.0135988 L289.085184,60.0135988 C296.963997,47.285432 308.937573,40.9268971 325.01701,40.9268971 C337.567626,40.9268971 348.065312,45.8872201 356.46568,55.8189632 C364.832757,65.7729001 369.049587,78.8450714 369.049587,95.0576709 L369.049587,95.0576709 Z M344.93598,95.9232307 C344.93598,85.5587077 342.59453,77.0140796 337.91163,70.2893464 C332.807047,63.2871901 325.949151,59.7694666 317.337941,59.7694666 C311.500962,59.7694666 306.196634,61.7225244 301.436056,65.5842524 C296.697671,69.4570774 293.590533,74.5283696 292.136837,80.8203231 C291.415537,83.7388129 291.027145,86.1246506 291.027145,88.011127 L291.027145,105.788392 C291.027145,113.511848 293.412983,120.047934 298.14027,125.396649 C302.889752,130.712074 309.059639,133.397528 316.672126,133.397528 C325.59405,133.397528 332.529624,129.946386 337.47885,123.099587 C342.45027,116.230594 344.93598,107.175507 344.93598,95.9232307 L344.93598,95.9232307 Z");
			attr_dev(path4, "id", "Fill-6");
			add_location(path4, file$6, 64, 12, 4625);
			attr_dev(path5, "d", "M505.985575,108.196424 C505.985575,120.758137 501.602292,130.9784 492.857919,138.86831 C483.247986,147.479519 469.831811,151.796221 452.631585,151.796221 C436.740796,151.796221 424.001533,148.733471 414.3916,142.596875 L419.862382,122.877648 C430.238002,129.014245 441.634538,132.088092 454.040894,132.088092 C462.962817,132.088092 469.898392,130.068452 474.847618,126.062464 C479.819038,122.034282 482.315845,116.67447 482.315845,109.971931 C482.315845,103.968497 480.251818,98.9304959 476.168152,94.8357325 C472.073388,90.763163 465.304267,86.9458227 455.805304,83.4613899 C429.949482,73.8181668 417.010473,59.702885 417.010473,41.1599324 C417.010473,29.0420962 421.582404,19.12145 430.692975,11.3647032 C439.814643,3.61905334 451.910285,-0.2537716 466.957708,-0.2537716 C480.396078,-0.2537716 491.59287,2.08767844 500.481503,6.75948159 L494.544651,26.0459279 C486.177573,21.5183847 476.734095,19.2546131 466.169827,19.2546131 C457.824944,19.2546131 451.266664,21.3075432 446.594861,25.3912096 C442.655455,29.0420962 440.646912,33.4919609 440.646912,38.7740947 C440.646912,44.5999775 442.921781,49.4382344 447.460421,53.222284 C451.38873,56.7289106 458.55734,60.535154 468.921863,64.6188204 C481.638933,69.7455973 490.971443,75.71574 496.963779,82.5736364 C502.989406,89.4315327 505.985575,97.9872577 505.985575,108.196424");
			attr_dev(path5, "id", "Fill-7");
			add_location(path5, file$6, 67, 12, 6005);
			attr_dev(path6, "d", "M584.407506,60.8791585 L558.329745,60.8791585 L558.329745,112.579707 C558.329745,125.729557 562.923869,132.287836 572.134313,132.287836 C576.362239,132.287836 579.868866,131.932735 582.643095,131.189241 L583.297814,149.155154 C578.637107,150.89737 572.500511,151.774027 564.910218,151.774027 C555.555515,151.774027 548.264838,148.911022 542.982705,143.218302 C537.722765,137.514485 535.092795,127.960038 535.092795,114.510571 L535.092795,60.8347708 L519.568204,60.8347708 L519.568204,43.0796995 L535.092795,43.0796995 L535.092795,23.5824117 L558.329745,16.5691585 L558.329745,43.0796995 L584.407506,43.0796995 L584.407506,60.8791585");
			attr_dev(path6, "id", "Fill-8");
			add_location(path6, file$6, 70, 12, 7400);
			attr_dev(path7, "d", "M701.835109,95.4904508 C701.835109,111.858407 697.163306,125.296777 687.808603,135.80556 C678.032216,146.613959 665.026627,152.018159 648.814027,152.018159 C633.16737,152.018159 620.727724,146.835898 611.450699,136.471375 C602.173674,126.106852 597.535162,113.034681 597.535162,97.2659579 C597.535162,80.7648385 602.340128,67.2487904 611.883479,56.7400075 C621.449023,46.2312246 634.343644,40.9601878 650.556243,40.9601878 C666.191803,40.9601878 678.731322,46.1646431 688.241382,56.5180691 C697.318663,66.5829752 701.835109,79.5552742 701.835109,95.4904508 L701.835109,95.4904508 Z M677.310917,96.0341998 C677.310917,86.2800075 675.202502,77.9129301 670.974576,70.9107739 C666.014252,62.4549211 658.901127,58.2380917 649.712878,58.2380917 C640.247205,58.2380917 632.956529,62.4549211 628.0184,70.9107739 C623.768279,77.9129301 621.670962,86.4242675 621.670962,96.4780766 C621.670962,106.243366 623.768279,114.632637 628.0184,121.601503 C633.13408,130.068452 640.269399,134.296379 649.52423,134.296379 C658.557122,134.296379 665.648054,129.96858 670.785928,121.401758 C675.124823,114.233148 677.310917,105.810586 677.310917,96.0341998 L677.310917,96.0341998 Z");
			attr_dev(path7, "id", "Fill-9");
			add_location(path7, file$6, 73, 12, 8103);
			attr_dev(path8, "d", "M778.770053,63.9308114 C776.428603,63.4980316 773.920699,63.2871901 771.312923,63.2871901 C762.990233,63.2871901 756.55402,66.4054245 752.026476,72.7084748 C748.08707,78.2569346 746.122915,85.2701878 746.122915,93.7371375 L746.122915,149.610128 L722.464282,149.610128 L722.464282,76.6589782 C722.464282,64.396882 722.231247,53.2000902 721.776273,43.1351841 L742.383253,43.1351841 L743.248813,63.5091285 L743.903531,63.5091285 C746.411435,56.5069722 750.339745,50.8586401 755.732847,46.6418107 C761.014981,42.8244703 766.696604,40.9268971 772.833201,40.9268971 C775.019294,40.9268971 776.994545,41.0933509 778.747859,41.3596769 L778.770053,63.9308114");
			attr_dev(path8, "id", "Fill-10");
			add_location(path8, file$6, 76, 12, 9332);
			attr_dev(path9, "d", "M884.579181,91.3291059 C884.579181,95.5681292 884.301758,99.1413373 883.713621,102.059827 L812.74882,102.059827 C813.00405,112.579707 816.455192,120.636071 823.035665,126.18453 C829.016905,131.133757 836.762554,133.619467 846.250421,133.619467 C856.759204,133.619467 866.346942,131.954929 874.969249,128.581465 L878.67562,145.004906 C868.599617,149.388189 856.692622,151.585379 842.976829,151.585379 C826.464613,151.585379 813.503411,146.724929 804.071029,137.026221 C794.671938,127.316416 789.944651,114.255342 789.944651,97.9206762 C789.944651,81.8745304 794.316837,68.5027423 803.105597,57.8386026 C812.293847,46.453163 824.7113,40.7604433 840.335763,40.7604433 C855.682802,40.7604433 867.301277,46.453163 875.18009,57.8386026 C881.438753,66.8603982 884.579181,78.0460932 884.579181,91.3291059 L884.579181,91.3291059 Z M862.019144,85.1925094 C862.185597,78.1681593 860.632029,72.131435 857.425019,67.0046582 C853.330255,60.4130879 847.027205,57.1283997 838.582449,57.1283997 C830.836799,57.1283997 824.544846,60.3354095 819.750977,66.7716228 C815.81157,71.8873028 813.47012,78.0460932 812.74882,85.1703156 L862.019144,85.1925094 L862.019144,85.1925094 Z");
			attr_dev(path9, "id", "Fill-11");
			add_location(path9, file$6, 79, 12, 10053);
			attr_dev(g1, "transform", "translate(460.000000, 219.000000)");
			attr_dev(g1, "fill", "#FFFFFF");
			attr_dev(g1, "sketch:type", "MSShapeGroup");
			add_location(g1, file$6, 53, 10, 2506);
			attr_dev(path10, "d", "M60.9543125,76.0776935 L48.5590533,76.0776935 L41.7788355,54.7605109 L18.1978813,54.7605109 L11.7283772,76.0776935 L-0.333974455,76.0776935 L23.0361382,3.4927423 L37.4621337,3.4927423 L60.9543125,76.0776935 L60.9543125,76.0776935 Z M39.7370023,45.8163937 L33.6004057,26.862855 C32.9567844,24.9208941 31.769414,20.4044478 29.9384222,13.19145 L29.7164838,13.19145 C28.9618933,16.3096844 27.8854921,20.8372276 26.2653418,26.862855 L20.2397145,45.8163937 L39.7370023,45.8163937 L39.7370023,45.8163937 Z");
			attr_dev(path10, "id", "Fill-12");
			add_location(path10, file$6, 89, 12, 11478);
			attr_dev(path11, "d", "M119.390691,23.7446206 L99.5715928,76.0776935 L88.2638317,76.0776935 L69.0883546,23.7446206 L81.5834861,23.7446206 L90.5276033,51.4203381 C92.0367844,56.0477536 93.324027,60.4643276 94.2894591,64.6589632 L94.6112697,64.6589632 C95.4768295,60.8971074 96.7640721,56.4805334 98.3731255,51.4203381 L107.206273,23.7446206 L119.390691,23.7446206");
			attr_dev(path11, "id", "Fill-13");
			add_location(path11, file$6, 92, 12, 12048);
			attr_dev(path12, "d", "M161.58118,76.0776935 L160.71562,70.0520661 L160.393809,70.0520661 C156.842795,74.90142 151.67163,77.2650639 145.102254,77.2650639 C135.736454,77.2650639 129.056108,70.6956875 129.056108,61.8625394 C129.056108,48.945725 140.2529,42.2653794 159.639219,42.2653794 L159.639219,41.2999474 C159.639219,34.4087603 155.977235,30.9576183 148.764237,30.9576183 C143.593073,30.9576183 139.06553,32.2559579 135.092832,34.8415402 L132.729189,27.1957626 C137.578542,24.1774005 143.60417,22.6682194 150.717295,22.6682194 C164.3887,22.6682194 171.290984,29.8812171 171.290984,44.3183095 L171.290984,63.5936589 C171.290984,68.8757926 171.512923,72.970556 172.045575,76.0887904 L161.58118,76.0776935 L161.58118,76.0776935 Z M159.961029,50.0110293 C147.033118,50.0110293 140.574711,53.1403606 140.574711,60.5641998 C140.574711,66.0571751 143.914884,68.7426296 148.542299,68.7426296 C154.468054,68.7426296 159.961029,64.2261833 159.961029,58.0895868 L159.961029,50.0110293 L159.961029,50.0110293 Z");
			attr_dev(path12, "id", "Fill-14");
			add_location(path12, file$6, 95, 12, 12459);
			attr_dev(path13, "d", "M197.191195,15.122314 C193.31837,15.122314 190.300008,12.1039519 190.300008,8.12015778 C190.300008,4.13636364 193.418242,1.2289707 197.413133,1.2289707 C201.396927,1.2289707 204.626131,4.13636364 204.515162,8.12015778 C204.515162,12.3258903 201.507896,15.122314 197.191195,15.122314 L197.191195,15.122314 Z M191.598347,23.7446206 L203.227919,23.7446206 L203.227919,76.0776935 L191.598347,76.0776935 L191.598347,23.7446206 Z");
			attr_dev(path13, "id", "Fill-15");
			add_location(path13, file$6, 98, 12, 13509);
			attr_dev(path14, "d", "M223.890383,-0.269113449 L235.519955,-0.269113449 L235.519955,76.0776935 L223.890383,76.0776935 L223.890383,-0.269113449 Z");
			attr_dev(path14, "id", "Fill-16");
			add_location(path14, file$6, 101, 12, 14004);
			attr_dev(path15, "d", "M284.945635,76.0776935 L284.068978,70.0520661 L283.758264,70.0520661 C280.20725,74.90142 275.036086,77.2650639 268.466709,77.2650639 C259.100909,77.2650639 252.420563,70.6956875 252.420563,61.8625394 C252.420563,48.945725 263.617355,42.2653794 283.003674,42.2653794 L283.003674,41.2999474 C283.003674,34.4087603 279.34169,30.9576183 272.128693,30.9576183 C266.957528,30.9576183 262.429985,32.2559579 258.457288,34.8415402 L256.082547,27.1846657 C260.931901,24.1663035 266.957528,22.6571225 274.070654,22.6571225 C287.742059,22.6571225 294.65544,29.8701202 294.65544,44.3072126 L294.65544,63.582562 C294.65544,68.8646957 294.877378,72.9594591 295.387836,76.0776935 L284.945635,76.0776935 L284.945635,76.0776935 Z M283.325485,50.0110293 C270.397573,50.0110293 263.939166,53.1403606 263.939166,60.5641998 C263.939166,66.0571751 267.279339,68.7426296 271.906754,68.7426296 C277.832509,68.7426296 283.325485,64.2261833 283.325485,58.0895868 L283.325485,50.0110293 L283.325485,50.0110293 Z");
			attr_dev(path15, "id", "Fill-17");
			add_location(path15, file$6, 104, 12, 14198);
			attr_dev(path16, "d", "M341.761863,77.2650639 C334.338024,77.2650639 328.856146,74.1357325 325.294035,67.999136 L325.072096,67.999136 L324.406281,76.0776935 L314.507829,76.0776935 C314.818542,71.8830579 314.929512,67.1335763 314.929512,61.9735086 L314.929512,-0.269113449 L326.581277,-0.269113449 L326.581277,31.4014951 L326.792119,31.4014951 C330.243261,25.5867092 335.836108,22.6793163 343.481886,22.6793163 C356.087986,22.6793163 364.921134,33.4544252 364.921134,49.1676634 C364.921134,65.4135537 355.111458,77.2650639 341.761863,77.2650639 L341.761863,77.2650639 Z M339.398219,31.8120811 C332.706777,31.8120811 326.581277,37.626867 326.581277,45.7054245 L326.581277,54.8603832 C326.581277,62.0733809 332.085349,67.999136 339.187378,67.999136 C347.89846,67.999136 353.091818,60.8971074 353.091818,49.5893464 C353.080721,39.0361758 347.687618,31.8120811 339.398219,31.8120811 L339.398219,31.8120811 Z");
			attr_dev(path16, "id", "Fill-18");
			add_location(path16, file$6, 107, 12, 15253);
			attr_dev(path17, "d", "M382.132457,-0.269113449 L393.750932,-0.269113449 L393.750932,76.0776935 L382.132457,76.0776935 L382.132457,-0.269113449 Z");
			attr_dev(path17, "id", "Fill-19");
			add_location(path17, file$6, 110, 12, 16204);
			attr_dev(path18, "d", "M457.047761,52.7075808 L422.136852,52.7075808 C422.369887,62.61713 428.91707,68.2099775 438.604681,68.2099775 C443.786942,68.2099775 448.525327,67.3444177 452.719962,65.7353644 L454.52876,73.8139219 C449.579534,75.9667243 443.764748,77.0431255 436.98453,77.0431255 C420.605477,77.0431255 410.917866,66.7007964 410.917866,50.6657476 C410.917866,34.6196018 420.838512,22.5572502 435.686191,22.5572502 C449.024688,22.5572502 457.44725,32.4667994 457.44725,47.436544 C457.480541,49.4783772 457.380669,51.3093689 457.047761,52.7075808 L457.047761,52.7075808 Z M446.394718,44.4181818 C446.394718,36.3396243 442.288858,30.6358077 434.853922,30.6358077 C428.173576,30.6358077 422.913636,36.4505935 422.136852,44.4181818 L446.394718,44.4181818 L446.394718,44.4181818 Z");
			attr_dev(path18, "id", "Fill-20");
			add_location(path18, file$6, 113, 12, 16398);
			attr_dev(path19, "d", "M527.535394,77.2650639 C512.243839,77.2650639 502.33429,65.8463336 502.33429,50.3439369 C502.33429,34.1868219 512.454681,22.6682194 528.412051,22.6682194 C543.470571,22.6682194 553.613156,33.5432006 553.613156,49.4894741 C553.613156,65.8463336 543.159857,77.2650639 527.535394,77.2650639 L527.535394,77.2650639 Z M527.979271,31.1684598 C519.578903,31.1684598 514.196897,39.0250789 514.196897,50.0110293 C514.196897,60.7861382 519.689872,68.6427573 527.868302,68.6427573 C536.046732,68.6427573 541.539707,60.2423892 541.539707,49.7890909 C541.539707,39.1360481 536.157701,31.1684598 527.979271,31.1684598 L527.979271,31.1684598 Z");
			attr_dev(path19, "id", "Fill-21");
			add_location(path19, file$6, 116, 12, 17229);
			attr_dev(path20, "d", "M616.133201,76.0776935 L604.525823,76.0776935 L604.525823,46.0272352 C604.525823,36.7724042 600.963711,32.1338918 593.961555,32.1338918 C587.070368,32.1338918 582.320887,38.0596469 582.320887,44.950834 L582.320887,76.0776935 L570.713509,76.0776935 L570.713509,38.7032682 C570.713509,34.0758527 570.580346,29.1155297 570.269632,23.7335237 L580.500992,23.7335237 L581.044741,31.8120811 L581.377648,31.8120811 C584.473689,26.2192337 590.843321,22.6571225 597.956446,22.6571225 C608.920203,22.6571225 616.133201,31.0574906 616.133201,44.7288956 L616.133201,76.0776935");
			attr_dev(path20, "id", "Fill-22");
			add_location(path20, file$6, 119, 12, 17929);
			attr_dev(path21, "d", "M692.224778,32.4667994 L679.43003,32.4667994 L679.43003,57.8787453 C679.43003,64.3482494 681.682705,67.577453 686.199151,67.577453 C688.240984,67.577453 689.983201,67.3555147 691.370316,67.033704 L691.692126,75.866852 C689.428355,76.7324117 686.398896,77.1651916 682.659234,77.1651916 C673.482081,77.1651916 668.022397,72.1049962 668.022397,58.8552742 L668.022397,32.4667994 L660.398813,32.4667994 L660.398813,23.7446206 L668.022397,23.7446206 L668.022397,14.156882 L679.43003,10.70574 L679.43003,23.7335237 L692.224778,23.7335237 L692.224778,32.4667994");
			attr_dev(path21, "id", "Fill-23");
			add_location(path21, file$6, 122, 12, 18564);
			attr_dev(path22, "d", "M753.812682,76.0776935 L742.172014,76.0776935 L742.172014,46.2491736 C742.172014,36.8833734 738.609902,32.1449887 731.618843,32.1449887 C725.593216,32.1449887 720.000368,36.2397521 720.000368,44.529151 L720.000368,76.0776935 L708.359699,76.0776935 L708.359699,-0.269113449 L720.000368,-0.269113449 L720.000368,31.1684598 L720.222307,31.1684598 C723.873193,25.4646431 729.166424,22.6571225 735.946642,22.6571225 C747.032464,22.6571225 753.812682,31.2683321 753.812682,44.950834 L753.812682,76.0776935");
			attr_dev(path22, "id", "Fill-24");
			add_location(path22, file$6, 125, 12, 19189);
			attr_dev(path23, "d", "M813.236687,52.7075808 L778.336875,52.7075808 C778.558813,62.61713 785.105995,68.2099775 794.804703,68.2099775 C799.998062,68.2099775 804.725349,67.3444177 808.897791,65.7353644 L810.717686,73.8139219 C805.779557,75.9667243 799.953674,77.0431255 793.162359,77.0431255 C776.794403,77.0431255 767.106792,66.7007964 767.106792,50.6657476 C767.106792,34.6196018 777.016341,22.5572502 791.86402,22.5572502 C805.213614,22.5572502 813.625079,32.4667994 813.625079,47.436544 C813.669467,49.4783772 813.558497,51.3093689 813.236687,52.7075808 L813.236687,52.7075808 Z M802.572547,44.4181818 C802.572547,36.3396243 798.488881,30.6358077 791.053944,30.6358077 C784.373599,30.6358077 779.102562,36.4505935 778.336875,44.4181818 L802.572547,44.4181818 L802.572547,44.4181818 Z");
			attr_dev(path23, "id", "Fill-25");
			add_location(path23, file$6, 128, 12, 19760);
			attr_dev(g2, "id", "Available-on-the");
			attr_dev(g2, "transform", "translate(469.000000, 92.000000)");
			attr_dev(g2, "fill", "#FFFFFF");
			attr_dev(g2, "sketch:type", "MSShapeGroup");
			add_location(g2, file$6, 83, 10, 11294);
			attr_dev(g3, "id", "App-Store");
			attr_dev(g3, "sketch:type", "MSLayerGroup");
			attr_dev(g3, "transform", "translate(462.000000, 850.000000)");
			add_location(g3, file$6, 26, 8, 705);
			attr_dev(g4, "id", "Artboard-1");
			attr_dev(g4, "sketch:type", "MSArtboardGroup");
			attr_dev(g4, "transform", "translate(-462.000000, -850.000000)");
			add_location(g4, file$6, 21, 6, 568);
			attr_dev(g5, "id", "Page-1");
			attr_dev(g5, "stroke", "none");
			attr_dev(g5, "stroke-width", "1");
			attr_dev(g5, "fill", "none");
			attr_dev(g5, "fill-rule", "evenodd");
			attr_dev(g5, "sketch:type", "MSPage");
			add_location(g5, file$6, 13, 4, 421);
			attr_dev(svg, "class", "h-12 pr-4 bounce-top-icons");
			attr_dev(svg, "viewBox", "0 0 1477 500");
			attr_dev(svg, "version", "1.1");
			attr_dev(svg, "xmlns", "http://www.w3.org/2000/svg");
			attr_dev(svg, "xmlns:xlink", "http://www.w3.org/1999/xlink");
			attr_dev(svg, "xmlns:sketch", "http://www.bohemiancoding.com/sketch/ns");
			add_location(svg, file$6, 1, 2, 11);
			add_location(button, file$6, 0, 0, 0);
		},
		l: function claim(nodes) {
			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
		},
		m: function mount(target, anchor) {
			insert_dev(target, button, anchor);
			append_dev(button, svg);
			append_dev(svg, title);
			append_dev(title, t0);
			append_dev(svg, desc);
			append_dev(desc, t1);
			append_dev(svg, defs);
			append_dev(svg, g5);
			append_dev(g5, g4);
			append_dev(g4, g3);
			append_dev(g3, rect);
			append_dev(g3, g0);
			append_dev(g0, path0);
			append_dev(g0, path1);
			append_dev(g3, g1);
			append_dev(g1, path2);
			append_dev(g1, path3);
			append_dev(g1, path4);
			append_dev(g1, path5);
			append_dev(g1, path6);
			append_dev(g1, path7);
			append_dev(g1, path8);
			append_dev(g1, path9);
			append_dev(g3, g2);
			append_dev(g2, path10);
			append_dev(g2, path11);
			append_dev(g2, path12);
			append_dev(g2, path13);
			append_dev(g2, path14);
			append_dev(g2, path15);
			append_dev(g2, path16);
			append_dev(g2, path17);
			append_dev(g2, path18);
			append_dev(g2, path19);
			append_dev(g2, path20);
			append_dev(g2, path21);
			append_dev(g2, path22);
			append_dev(g2, path23);
		},
		p: noop,
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(button);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$7.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$7($$self, $$props) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots('AppStore', slots, []);
	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<AppStore> was created with unknown prop '${key}'`);
	});

	return [];
}

class AppStore extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$7, create_fragment$7, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "AppStore",
			options,
			id: create_fragment$7.name
		});
	}
}

/* src/components/buttons/PlayStore.svelte generated by Svelte v3.45.0 */

const file$5 = "src/components/buttons/PlayStore.svelte";

function create_fragment$6(ctx) {
	let button;
	let svg;
	let title;
	let t0;
	let desc;
	let t1;
	let defs;
	let linearGradient0;
	let stop0;
	let stop1;
	let linearGradient1;
	let stop2;
	let stop3;
	let path0;
	let path1;
	let linearGradient2;
	let stop4;
	let stop5;
	let linearGradient3;
	let stop6;
	let stop7;
	let path2;
	let g9;
	let g8;
	let g7;
	let rect;
	let g4;
	let path3;
	let g0;
	let mask0;
	let use0;
	let use1;
	let path4;
	let g2;
	let mask1;
	let use2;
	let g1;
	let path5;
	let g3;
	let mask2;
	let use3;
	let use4;
	let path6;
	let g5;
	let path7;
	let path8;
	let path9;
	let path10;
	let path11;
	let path12;
	let path13;
	let path14;
	let path15;
	let path16;
	let g6;
	let path17;
	let path18;
	let path19;
	let path20;
	let path21;
	let path22;
	let path23;

	const block = {
		c: function create() {
			button = element("button");
			svg = svg_element("svg");
			title = svg_element("title");
			t0 = text("Play Store");
			desc = svg_element("desc");
			t1 = text("Created with Sketch.");
			defs = svg_element("defs");
			linearGradient0 = svg_element("linearGradient");
			stop0 = svg_element("stop");
			stop1 = svg_element("stop");
			linearGradient1 = svg_element("linearGradient");
			stop2 = svg_element("stop");
			stop3 = svg_element("stop");
			path0 = svg_element("path");
			path1 = svg_element("path");
			linearGradient2 = svg_element("linearGradient");
			stop4 = svg_element("stop");
			stop5 = svg_element("stop");
			linearGradient3 = svg_element("linearGradient");
			stop6 = svg_element("stop");
			stop7 = svg_element("stop");
			path2 = svg_element("path");
			g9 = svg_element("g");
			g8 = svg_element("g");
			g7 = svg_element("g");
			rect = svg_element("rect");
			g4 = svg_element("g");
			path3 = svg_element("path");
			g0 = svg_element("g");
			mask0 = svg_element("mask");
			use0 = svg_element("use");
			use1 = svg_element("use");
			path4 = svg_element("path");
			g2 = svg_element("g");
			mask1 = svg_element("mask");
			use2 = svg_element("use");
			g1 = svg_element("g");
			path5 = svg_element("path");
			g3 = svg_element("g");
			mask2 = svg_element("mask");
			use3 = svg_element("use");
			use4 = svg_element("use");
			path6 = svg_element("path");
			g5 = svg_element("g");
			path7 = svg_element("path");
			path8 = svg_element("path");
			path9 = svg_element("path");
			path10 = svg_element("path");
			path11 = svg_element("path");
			path12 = svg_element("path");
			path13 = svg_element("path");
			path14 = svg_element("path");
			path15 = svg_element("path");
			path16 = svg_element("path");
			g6 = svg_element("g");
			path17 = svg_element("path");
			path18 = svg_element("path");
			path19 = svg_element("path");
			path20 = svg_element("path");
			path21 = svg_element("path");
			path22 = svg_element("path");
			path23 = svg_element("path");
			add_location(title, file$5, 10, 4, 331);
			add_location(desc, file$5, 11, 4, 361);
			attr_dev(stop0, "stop-color", "#FF177B");
			attr_dev(stop0, "offset", "0%");
			add_location(stop0, file$5, 20, 8, 574);
			attr_dev(stop1, "stop-color", "#FFEC73");
			attr_dev(stop1, "offset", "100%");
			add_location(stop1, file$5, 21, 8, 629);
			attr_dev(linearGradient0, "x1", "58.9170878%");
			attr_dev(linearGradient0, "y1", "9.59026547%");
			attr_dev(linearGradient0, "x2", "90.8103723%");
			attr_dev(linearGradient0, "y2", "60.8514694%");
			attr_dev(linearGradient0, "id", "linearGradient-1");
			add_location(linearGradient0, file$5, 13, 6, 412);
			attr_dev(stop2, "stop-color", "#064AA2");
			attr_dev(stop2, "offset", "0%");
			add_location(stop2, file$5, 30, 8, 862);
			attr_dev(stop3, "stop-color", "#63FFD4");
			attr_dev(stop3, "offset", "100%");
			add_location(stop3, file$5, 31, 8, 917);
			attr_dev(linearGradient1, "x1", "37.1029741%");
			attr_dev(linearGradient1, "y1", "-44.0352456%");
			attr_dev(linearGradient1, "x2", "0%");
			attr_dev(linearGradient1, "y2", "101.060094%");
			attr_dev(linearGradient1, "id", "linearGradient-2");
			add_location(linearGradient1, file$5, 23, 6, 708);
			attr_dev(path0, "id", "path-3");
			attr_dev(path0, "d", "M139,127 L5,0 C1.87378254,0.726186853 0,3.06462999 0,7 L0,127 L0,250 C0,253.338867 1.34597157,255.325411 3,256 L139,127 Z");
			add_location(path0, file$5, 33, 6, 996);
			attr_dev(path1, "id", "path-5");
			attr_dev(path1, "d", "M5.53437056,127.785198 L82.986448,85.238085 C102.059222,74.6695888 117.195851,66.282093 117.195851,66.282093 L173.520199,35.9446714 L136.02203,-0.492035149 L0.0236165533,128.524017 C1.53944448,129.011528 4.21113604,128.745054 6.29548251,127.716318");
			add_location(path1, file$5, 37, 6, 1177);
			attr_dev(stop4, "stop-color", "#FF4521");
			attr_dev(stop4, "offset", "0%");
			add_location(stop4, file$5, 48, 8, 1631);
			attr_dev(stop5, "stop-color", "#8A33DB");
			attr_dev(stop5, "offset", "100%");
			add_location(stop5, file$5, 49, 8, 1686);
			attr_dev(linearGradient2, "x1", "78.6453125%");
			attr_dev(linearGradient2, "y1", "50%");
			attr_dev(linearGradient2, "x2", "2.49516972%");
			attr_dev(linearGradient2, "y2", "100%");
			attr_dev(linearGradient2, "id", "linearGradient-7");
			add_location(linearGradient2, file$5, 41, 6, 1484);
			attr_dev(stop6, "stop-color", "#00A3B5");
			attr_dev(stop6, "offset", "0%");
			add_location(stop6, file$5, 58, 8, 1912);
			attr_dev(stop7, "stop-color", "#D6FFA1");
			attr_dev(stop7, "offset", "100%");
			add_location(stop7, file$5, 59, 8, 1967);
			attr_dev(linearGradient3, "x1", "0%");
			attr_dev(linearGradient3, "y1", "-24.1863374%");
			attr_dev(linearGradient3, "x2", "64.2244373%");
			attr_dev(linearGradient3, "y2", "100%");
			attr_dev(linearGradient3, "id", "linearGradient-8");
			add_location(linearGradient3, file$5, 51, 6, 1765);
			attr_dev(path2, "id", "path-9");
			attr_dev(path2, "d", "M7.12902383,1.14687426 C4.54941065,-0.234702829 1.98636664,-0.629922435 -0.0869650899,-0.07134193 L134.024287,127.113403 L171.126971,92.0020155 L115.2,61.0225581 C115.2,61.0225581 62.4870167,31.817123 30.6586078,14.1823037 L7.12902383,1.14687426 Z");
			add_location(path2, file$5, 61, 6, 2046);
			add_location(defs, file$5, 12, 4, 399);
			attr_dev(rect, "id", "background");
			attr_dev(rect, "fill", "#000000");
			attr_dev(rect, "sketch:type", "MSShapeGroup");
			attr_dev(rect, "x", "0");
			attr_dev(rect, "y", "0");
			attr_dev(rect, "width", "1477");
			attr_dev(rect, "height", "500");
			attr_dev(rect, "rx", "60");
			add_location(rect, file$5, 84, 10, 2789);
			attr_dev(path3, "d", "M120.179253,61.0225581 C120.179253,61.0225581 18.2738589,4.56224806 12.2887967,1.24515504 C6.29377593,-2.07193798 0.328630705,-0.0597674419 0.328630705,6.87325581 L0.328630705,127.404264 L0.328630705,250.385736 C0.328630705,255.575543 4.59087137,257.826783 9.79917012,254.947984 C14.9975104,252.069186 120.179253,193.785969 120.179253,193.785969 C120.179253,193.785969 134.46801,185.873586 141.612388,181.917395 C153.110334,175.550421 176.106224,162.816473 176.106224,162.816473 C176.106224,162.816473 223.558506,136.518798 229.872199,133.032364 C236.175934,129.535969 235.568465,124.744612 230.250622,121.985349 C224.922822,119.236047 176.106224,92.0020155 176.106224,92.0020155 L120.179253,61.0225581 Z");
			attr_dev(path3, "id", "orange");
			attr_dev(path3, "fill", "url(#linearGradient-1)");
			attr_dev(path3, "sketch:type", "MSShapeGroup");
			add_location(path3, file$5, 94, 12, 3084);
			xlink_attr(use0, "xlink:href", "#path-3");
			add_location(use0, file$5, 101, 16, 4041);
			attr_dev(mask0, "id", "mask-4");
			attr_dev(mask0, "sketch:name", "Clip 2");
			attr_dev(mask0, "fill", "white");
			add_location(mask0, file$5, 100, 14, 3972);
			attr_dev(use1, "id", "Clip-2");
			attr_dev(use1, "fill", "url(#linearGradient-2)");
			attr_dev(use1, "sketch:type", "MSShapeGroup");
			xlink_attr(use1, "xlink:href", "#path-3");
			add_location(use1, file$5, 103, 14, 4110);
			attr_dev(path4, "d", "M176,92 L120,61 C119.803881,61.451092 17.9382297,4.88708221 12,2 C5.96281885,-1.75928874 0,0.256577526 0,7 L0,128 C0,127.95472 0,245.952753 0,251 C0,256.361409 4.26057841,258.616784 9,256 C14.6631589,252.848612 119.803881,194.458347 120,194 L176,163 C175.709041,163.43197 223.142817,137.085995 229,134 C235.755324,130.09034 235.148092,125.290184 230,123 C224.5066,119.7715 175.709041,92.4874489 176,92");
			attr_dev(path4, "id", "Fill-1");
			attr_dev(path4, "sketch:type", "MSShapeGroup");
			attr_dev(path4, "mask", "url(#mask-4)");
			add_location(path4, file$5, 108, 14, 4290);
			attr_dev(g0, "id", "blue");
			add_location(g0, file$5, 99, 12, 3944);
			xlink_attr(use2, "xlink:href", "#path-5");
			add_location(use2, file$5, 116, 16, 5002);
			attr_dev(mask1, "id", "mask-6");
			attr_dev(mask1, "sketch:name", "Clip 8");
			attr_dev(mask1, "fill", "white");
			add_location(mask1, file$5, 115, 14, 4933);
			attr_dev(g1, "id", "Clip-8");
			add_location(g1, file$5, 118, 14, 5071);
			attr_dev(path5, "d", "M117.016598,-66.503876 C116.820479,-66.0527839 14.9548272,-122.616794 9.01659751,-125.503876 C2.97941636,-129.263165 -2.98340249,-127.247298 -2.98340249,-120.503876 L-2.98340249,0.496124031 C-2.98340249,0.450843681 -2.98340249,118.448877 -2.98340249,123.496124 C-2.98340249,128.857533 1.27717592,131.112908 6.01659751,128.496124 C11.6797564,125.344736 116.820479,66.9544713 117.016598,66.496124 L173.016598,35.496124 C172.725639,35.928094 220.159415,9.58211908 226.016598,6.49612403 C232.771921,2.58646438 232.164689,-2.21369242 227.016598,-4.50387597 C221.523198,-7.73237581 172.725639,-35.0164271 173.016598,-35.503876 L117.016598,-66.503876 Z");
			attr_dev(path5, "id", "Fill-7");
			attr_dev(path5, "fill", "url(#linearGradient-7)");
			attr_dev(path5, "sketch:type", "MSShapeGroup");
			attr_dev(path5, "mask", "url(#mask-6)");
			add_location(path5, file$5, 119, 14, 5105);
			attr_dev(g2, "id", "red");
			attr_dev(g2, "transform", "translate(2.983402, 127.503876)");
			add_location(g2, file$5, 114, 12, 4862);
			xlink_attr(use3, "xlink:href", "#path-9");
			add_location(use3, file$5, 128, 16, 6108);
			attr_dev(mask2, "id", "mask-10");
			attr_dev(mask2, "sketch:name", "Clip 5");
			attr_dev(mask2, "fill", "white");
			add_location(mask2, file$5, 127, 14, 6038);
			attr_dev(use4, "id", "Clip-5");
			attr_dev(use4, "fill", "url(#linearGradient-8)");
			attr_dev(use4, "sketch:type", "MSShapeGroup");
			xlink_attr(use4, "xlink:href", "#path-9");
			add_location(use4, file$5, 130, 14, 6177);
			attr_dev(path6, "d", "M171.020747,92 L115.020747,61 C114.824628,61.451092 12.9589766,4.88708221 7.02074689,2 C0.983565743,-1.75928874 -4.97925311,0.256577526 -4.97925311,7 L-4.97925311,128 C-4.97925311,127.95472 -4.97925311,245.952753 -4.97925311,251 C-4.97925311,256.361409 -0.718674698,258.616784 4.02074689,256 C9.68390577,252.848612 114.824628,194.458347 115.020747,194 L171.020747,163 C170.729788,163.43197 218.163564,137.085995 224.020747,134 C230.776071,130.09034 230.168839,125.290184 225.020747,123 C219.527347,119.7715 170.729788,92.4874489 171.020747,92");
			attr_dev(path6, "id", "Fill-4");
			attr_dev(path6, "sketch:type", "MSShapeGroup");
			attr_dev(path6, "mask", "url(#mask-10)");
			add_location(path6, file$5, 135, 14, 6357);
			attr_dev(g3, "id", "green");
			attr_dev(g3, "transform", "translate(4.979253, 0.000000)");
			add_location(g3, file$5, 126, 12, 5967);
			attr_dev(g4, "id", "icon");
			attr_dev(g4, "transform", "translate(60.000000, 179.000000)");
			add_location(g4, file$5, 93, 10, 3013);
			attr_dev(path7, "d", "M664.61527,147.869801 L653.541573,158.380368 C650.98241,159.79512 648.436969,161.437612 645.898389,162.603919 C638.207178,166.116643 630.385607,167 623.435387,167 C616.0392,167 604.444065,166.516914 592.615654,157.911085 C576.183495,146.268716 569,126.255161 569,108.815762 C569,72.7085464 598.221113,55 622.056321,55 C630.385607,55 638.941308,57.0979728 645.898389,61.5216588 C657.46608,69.216526 660.457488,79.2164027 662.117856,84.5717543 L607.68933,106.690184 L589.864383,108.084232 C595.634506,137.690492 615.545206,154.909052 637.548519,154.909052 C648.539884,154.909052 656.697645,151.29971 664.183025,147.579949 C664.183025,147.579949 665.68559,146.79321 664.61527,147.869801 L664.61527,147.869801 Z M631.359496,88.4775359 C635.727713,86.8517832 638,85.4483557 638,82.1829551 C638,72.8175081 627.656008,62 615.311047,62 C606.167636,62 589,69.295044 589,94.6262158 C589,98.5794349 589.46124,102.789717 589.69186,107 L631.359496,88.4775359 L631.359496,88.4775359 Z");
			attr_dev(path7, "id", "Fill-1");
			add_location(path7, file$5, 148, 12, 7264);
			attr_dev(path8, "d", "M551.026121,146.60314 C551.026121,155.628579 552.626345,157.032995 560.210314,157.742087 C564.163004,158.210226 568.102018,158.416758 572,158.884896 L563.465471,164 L522.796525,164 C528.130605,157.032995 529.046973,156.337671 529.046973,151.69759 L529.046973,146.513643 L528.958072,8.38519016 L511,8.38519016 L528.287892,0 L561.290807,0 C554.137668,4.1719419 551.997197,6.71228276 551.08083,14.8427504 L551.026121,146.60314");
			attr_dev(path8, "id", "Fill-2");
			add_location(path8, file$5, 151, 12, 8305);
			attr_dev(path9, "d", "M487.929114,66.39776 C493.220316,70.782492 504.260152,80.0888621 504.260152,97.7379249 C504.260152,114.939566 494.640406,123.048223 484.938732,130.723225 C481.962004,133.745042 478.480052,137.021545 478.480052,142.087734 C478.480052,147.229641 481.962004,150.017422 484.467644,152.096212 L492.790192,158.573501 C502.908335,167.184646 512.132095,175.079918 512.132095,191.118262 C512.132095,212.966205 491.158454,235 451.525647,235 C418.139872,235 402,218.968539 402,201.780664 C402,193.417321 406.130551,181.570973 419.757955,173.455433 C434.040786,164.651552 453.389516,163.474489 463.753443,162.786148 C460.517276,158.573501 456.823676,154.161235 456.823676,146.961188 C456.823676,143.023878 457.997981,140.676635 459.131323,137.909505 C456.612028,138.150424 454.072251,138.398227 451.764605,138.398227 C427.329494,138.398227 413.517751,120.019522 413.517751,101.909271 C413.517751,91.2262192 418.35152,79.3729875 428.278497,70.782492 C441.414332,59.8791709 457.076288,58 469.52256,58 L517,58 L502.239254,66.39776 L487.929114,66.39776 L487.929114,66.39776 Z M471.720106,169.252274 C469.813618,169 468.671102,169 466.372304,169 C464.26622,169 451.719189,169.462503 442.000918,172.784116 C436.859594,174.697197 422,180.352348 422,197.149619 C422,213.911851 438.043406,226 462.862164,226 C485.161879,226 497,215.117163 497,200.464224 C497,188.404106 489.339635,182.041185 471.720106,169.252274 L471.720106,169.252274 Z M478.235214,124.515284 C483.537729,119.169682 484,111.786026 484,107.593263 C484,90.9388646 474.163154,65 455.094494,65 C449.146159,65 442.701564,68.0124766 439.044188,72.6718653 C435.162475,77.4959451 434,83.7542109 434,89.7723019 C434,105.280724 442.959891,131 462.667573,131 C468.418763,131 474.605031,128.179663 478.235214,124.515284 L478.235214,124.515284 Z");
			attr_dev(path9, "id", "Fill-3");
			add_location(path9, file$5, 154, 12, 8799);
			attr_dev(path10, "d", "M344.336863,167 C307.636483,167 288,138.048704 288,111.8352 C288,81.2065722 312.685864,55 347.798905,55 C381.741968,55 403,81.9204778 403,110.185593 C403,137.792252 381.988279,167 344.336863,167 L344.336863,167 Z M373.038446,148.065395 C378.640643,140.558479 380,131.188737 380,122.055323 C380,101.397404 370.278541,62 341.546685,62 C333.905453,62 326.209298,65.0236187 320.662024,69.9587205 C311.613378,78.1676715 310,88.4827293 310,98.6031633 C310,121.777289 321.314241,160 349.39388,160 C358.456257,160 367.704002,155.558408 373.038446,148.065395 L373.038446,148.065395 Z");
			attr_dev(path10, "id", "Fill-4");
			add_location(path10, file$5, 157, 12, 10650);
			attr_dev(path11, "d", "M221.332956,167 C184.61044,167 165,138.048704 165,111.8352 C165,81.2065722 189.702994,55 224.816975,55 C258.753646,55 280,81.9204778 280,110.185593 C280,137.792252 259.006904,167 221.332956,167 L221.332956,167 Z M250.048769,148.065395 C255.612501,140.558479 257,131.188737 257,122.055323 C257,101.397404 247.246296,62 218.527819,62 C210.855363,62 203.237857,65.0236187 197.674124,69.9587205 C188.607301,78.1676715 187,88.4827293 187,98.6031633 C187,121.777289 198.367874,160 226.413208,160 C235.459425,160 244.697969,155.558408 250.048769,148.065395 L250.048769,148.065395 Z");
			attr_dev(path11, "id", "Fill-5");
			add_location(path11, file$5, 160, 12, 11295);
			attr_dev(path12, "d", "M149.774985,160.080409 L118.688962,167.244878 C106.093764,169.24346 94.7835087,171 82.8067322,171 C22.8472645,171 0,126.581676 0,91.8174048 C0,49.3630858 32.3709663,10 87.8090806,10 C99.5384883,10 110.821258,11.7357931 121.100809,14.5573214 C137.392798,19.1630514 145.013134,24.8406855 149.774985,28.1670461 L131.717057,45.4281603 L124.103592,47.1432069 L129.531965,38.4365792 C122.179612,31.2098707 108.663651,17.869851 83.0128729,17.869851 C48.7179264,17.869851 22.8472645,44.1072978 22.8472645,82.4123105 C22.8472645,123.552682 52.3872315,162.251879 99.7652431,162.251879 C113.686614,162.251879 120.85344,159.437266 127.360616,156.809372 L127.360616,121.540269 L94.5361399,123.317555 L111.934418,113.912461 L158,113.912461 L152.365487,119.368799 C150.846917,120.668915 150.640776,121.111507 150.214752,122.854216 C149.987997,124.845883 149.774985,131.180491 149.774985,133.407285 L149.774985,160.080409");
			attr_dev(path12, "id", "Fill-6");
			add_location(path12, file$5, 163, 12, 11940);
			attr_dev(path13, "d", "M731.702413,148.939774 L731.702413,208 L720,208 L720,57.714228 L731.702413,57.714228 L731.702413,74.8310428 C739.325778,63.7679871 753.256243,55 769.435327,55 C798.454844,55 818,77.0642684 818,111.991916 C818,146.685934 798.454844,169.21059 769.435327,169.21059 C754.161175,169.21059 740.47751,161.315279 731.702413,148.939774 L731.702413,148.939774 Z M806,112.892369 C806,86.2901677 792.258322,66 767.892133,66 C752.760461,66 738.289381,77.9991135 732,88.4636182 L732,137.078082 C738.289381,147.563419 752.760461,160 767.892133,160 C792.258322,160 806,139.536234 806,112.892369 L806,112.892369 Z");
			attr_dev(path13, "id", "Fill-7");
			add_location(path13, file$5, 166, 12, 12916);
			attr_dev(path14, "d", "M834,16 L846,16 L846,167 L834,167 L834,16 Z");
			attr_dev(path14, "id", "Fill-8");
			add_location(path14, file$5, 169, 12, 13583);
			attr_dev(path15, "d", "M976.463271,197.601096 C978.96572,198.721396 983.237023,199.408697 985.945152,199.408697 C993.10284,199.408697 998.087169,196.473923 1002.56415,186.109429 L1011.0999,166.720677 L965,57 L978.053869,57 L1017.59941,152.081173 L1056.76102,57 L1070,57 L1013.77375,189.74525 C1007.93928,203.422533 998.75906,210 986.150833,210 C982.366308,210 977.375122,209.326445 974.454456,208.426081 L976.463271,197.601096");
			attr_dev(path15, "id", "Fill-9");
			add_location(path15, file$5, 171, 12, 13682);
			attr_dev(path16, "d", "M943.4375,166.851012 C942.651468,163.057462 942.058496,159.713056 941.62411,156.921445 C941.265569,154.136744 941.058719,151.289853 941.058719,148.394593 C937.025133,154.330222 931.309164,159.270821 924.00734,163.16111 C916.698621,167.07904 909.755338,169 900.233319,169 C888.766904,169 879.865436,166.173839 873.515125,160.438599 C867.185498,154.710268 864,146.950418 864,137.13141 C864,127.326221 868.612767,119.365984 877.810721,113.278337 C887.008674,107.16305 898.895685,104.122682 913.609653,104.122682 L941.058719,104.122682 L941.058719,90.5308522 C941.058719,82.7019033 938.397242,76.545157 933.081183,72.0813432 C927.74444,67.6106195 920.25645,65.3510729 910.548265,65.3510729 C901.674377,65.3510729 894.475979,67.4171415 888.99444,71.4387198 C883.561165,75.5432174 880.823843,80.6289247 880.823843,86.7580313 L868.778247,86.7580313 L868.530027,86.1706874 C868.095641,77.9064129 871.867215,70.6578979 879.886121,64.3975027 C887.870552,58.1440175 898.330294,55 911.203292,55 C924.03492,55 934.418817,58.095648 942.244662,64.273124 C950.063612,70.3884107 953.986877,79.2262092 953.986877,90.7796096 L953.986877,144.746151 C953.986877,148.622621 954.173043,152.367802 954.655694,156.016244 C955.152135,159.671597 955.945062,163.320039 957,166.851012 L943.4375,166.851012 L943.4375,166.851012 Z M901.6493,159 C911.638536,159 918.817008,156.749653 926.153929,152.297577 C933.442626,147.873283 938.402799,142.101559 941,135.11437 L941,114 L913.443488,114 C902.9169,114 894.202153,116.347585 887.34747,121.084427 C880.47901,125.807378 877,131.523538 877,138.170397 C877,144.442198 879.204521,149.456861 883.586006,153.256058 C887.98127,157.096929 893.98859,159 901.6493,159 L901.6493,159 Z");
			attr_dev(path16, "id", "Fill-10");
			add_location(path16, file$5, 174, 12, 14156);
			attr_dev(g5, "id", "Google-play");
			attr_dev(g5, "transform", "translate(347.000000, 201.000000)");
			attr_dev(g5, "fill", "#FFFFFF");
			attr_dev(g5, "sketch:type", "MSShapeGroup");
			add_location(g5, file$5, 142, 10, 7084);
			attr_dev(path17, "d", "M0.0424710425,35.3110072 C0.0424710425,13.770941 17.2432432,-0.0849420849 38.6322691,-0.0849420849 C52.9673941,-0.0849420849 62.3427449,6.27902272 68.1842566,14.0721558 L57.7136224,19.7183321 C53.7458031,14.584862 46.7952307,10.592163 38.6322691,10.592163 C24.0835984,10.592163 13.2754239,20.8462856 13.2754239,35.3110072 C13.2754239,49.5642375 24.0835984,60.0298513 38.6322691,60.0298513 C46.1339275,60.0298513 52.7469597,56.8510733 56.0534758,53.8773778 L56.0534758,43.3092227 L34.0031466,43.3092227 L34.0031466,32.7410677 L68.8455598,32.7410677 L68.8455598,58.2866505 C61.6814417,65.7785688 51.314136,70.8030888 38.6322691,70.8030888 C17.2432432,70.8030888 0.0424710425,56.7549409 0.0424710425,35.3110072");
			attr_dev(path17, "id", "Fill-1");
			add_location(path17, file$5, 184, 12, 16109);
			attr_dev(path18, "d", "M85.5250965,69.7606178 L85.5250965,0.957528958 L136.606178,0.957528958 L136.606178,11.5902064 L98.6043672,11.5902064 L98.6043672,29.3242234 L135.824075,29.3242234 L135.824075,39.9504568 L98.6043672,39.9504568 L98.6043672,59.1343844 L136.606178,59.1343844 L136.606178,69.7606178 L85.5250965,69.7606178");
			attr_dev(path18, "id", "Fill-2");
			add_location(path18, file$5, 187, 12, 16887);
			attr_dev(path19, "d", "M171.344753,69.7606178 L171.344753,11.5902064 L149.11583,11.5902064 L149.11583,0.957528958 L206.451737,0.957528958 L206.451737,11.5902064 L184.222815,11.5902064 L184.222815,69.7606178 L171.344753,69.7606178");
			attr_dev(path19, "id", "Fill-3");
			add_location(path19, file$5, 190, 12, 17258);
			attr_dev(path20, "d", "M252.320463,0.957528958 L264.830116,0.957528958 L264.830116,69.7606178 L252.320463,69.7606178 L252.320463,0.957528958 Z");
			attr_dev(path20, "id", "Fill-4");
			add_location(path20, file$5, 193, 12, 17535);
			attr_dev(path21, "d", "M300.618038,69.7606178 L300.618038,11.5902064 L278.382239,11.5902064 L278.382239,0.957528958 L335.718147,0.957528958 L335.718147,11.5902064 L313.496099,11.5902064 L313.496099,69.7606178 L300.618038,69.7606178");
			attr_dev(path21, "id", "Fill-5");
			add_location(path21, file$5, 196, 12, 17725);
			attr_dev(path22, "d", "M378.459459,35.3622824 C378.459459,14.9141822 394.192589,-0.0849420849 416.513138,-0.0849420849 C438.708213,-0.0849420849 454.559846,14.9141822 454.559846,35.3622824 C454.559846,55.8039645 438.708213,70.8030888 416.513138,70.8030888 C394.192589,70.8030888 378.459459,55.8039645 378.459459,35.3622824 L378.459459,35.3622824 Z M441.007722,34.8378378 C441.007722,20.807183 431.367775,10.3397683 416.513115,10.3397683 C401.547651,10.3397683 392.011583,20.807183 392.011583,34.8378378 C392.011583,48.7605157 401.547651,59.3359073 416.513115,59.3359073 C431.367775,59.3359073 441.007722,48.7605157 441.007722,34.8378378 L441.007722,34.8378378 Z");
			attr_dev(path22, "id", "Fill-6");
			add_location(path22, file$5, 199, 12, 18004);
			attr_dev(path23, "d", "M520.311577,69.7606178 L482.021048,20.5603196 L482.021048,69.7606178 L469.15444,69.7606178 L469.15444,0.957528958 L482.357834,0.957528958 L519.871693,48.6176999 L519.871693,0.957528958 L532.745174,0.957528958 L532.745174,69.7606178 L520.311577,69.7606178");
			attr_dev(path23, "id", "Fill-7");
			add_location(path23, file$5, 202, 12, 18713);
			attr_dev(g6, "id", "Get-it-on");
			attr_dev(g6, "transform", "translate(343.000000, 80.000000)");
			attr_dev(g6, "fill", "#FFFFFF");
			attr_dev(g6, "sketch:type", "MSShapeGroup");
			add_location(g6, file$5, 178, 10, 15932);
			attr_dev(g7, "id", "Play-Store");
			attr_dev(g7, "sketch:type", "MSLayerGroup");
			attr_dev(g7, "transform", "translate(461.000000, 270.000000)");
			add_location(g7, file$5, 79, 8, 2647);
			attr_dev(g8, "id", "Artboard-1");
			attr_dev(g8, "sketch:type", "MSArtboardGroup");
			attr_dev(g8, "transform", "translate(-461.000000, -270.000000)");
			add_location(g8, file$5, 74, 6, 2510);
			attr_dev(g9, "id", "Page-1");
			attr_dev(g9, "stroke", "none");
			attr_dev(g9, "stroke-width", "1");
			attr_dev(g9, "fill", "none");
			attr_dev(g9, "fill-rule", "evenodd");
			attr_dev(g9, "sketch:type", "MSPage");
			add_location(g9, file$5, 66, 4, 2363);
			attr_dev(svg, "class", "h-12 bounce-top-icons");
			attr_dev(svg, "viewBox", "0 0 1477 500");
			attr_dev(svg, "version", "1.1");
			attr_dev(svg, "xmlns", "http://www.w3.org/2000/svg");
			attr_dev(svg, "xmlns:xlink", "http://www.w3.org/1999/xlink");
			attr_dev(svg, "xmlns:sketch", "http://www.bohemiancoding.com/sketch/ns");
			add_location(svg, file$5, 1, 2, 11);
			add_location(button, file$5, 0, 0, 0);
		},
		l: function claim(nodes) {
			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
		},
		m: function mount(target, anchor) {
			insert_dev(target, button, anchor);
			append_dev(button, svg);
			append_dev(svg, title);
			append_dev(title, t0);
			append_dev(svg, desc);
			append_dev(desc, t1);
			append_dev(svg, defs);
			append_dev(defs, linearGradient0);
			append_dev(linearGradient0, stop0);
			append_dev(linearGradient0, stop1);
			append_dev(defs, linearGradient1);
			append_dev(linearGradient1, stop2);
			append_dev(linearGradient1, stop3);
			append_dev(defs, path0);
			append_dev(defs, path1);
			append_dev(defs, linearGradient2);
			append_dev(linearGradient2, stop4);
			append_dev(linearGradient2, stop5);
			append_dev(defs, linearGradient3);
			append_dev(linearGradient3, stop6);
			append_dev(linearGradient3, stop7);
			append_dev(defs, path2);
			append_dev(svg, g9);
			append_dev(g9, g8);
			append_dev(g8, g7);
			append_dev(g7, rect);
			append_dev(g7, g4);
			append_dev(g4, path3);
			append_dev(g4, g0);
			append_dev(g0, mask0);
			append_dev(mask0, use0);
			append_dev(g0, use1);
			append_dev(g0, path4);
			append_dev(g4, g2);
			append_dev(g2, mask1);
			append_dev(mask1, use2);
			append_dev(g2, g1);
			append_dev(g2, path5);
			append_dev(g4, g3);
			append_dev(g3, mask2);
			append_dev(mask2, use3);
			append_dev(g3, use4);
			append_dev(g3, path6);
			append_dev(g7, g5);
			append_dev(g5, path7);
			append_dev(g5, path8);
			append_dev(g5, path9);
			append_dev(g5, path10);
			append_dev(g5, path11);
			append_dev(g5, path12);
			append_dev(g5, path13);
			append_dev(g5, path14);
			append_dev(g5, path15);
			append_dev(g5, path16);
			append_dev(g7, g6);
			append_dev(g6, path17);
			append_dev(g6, path18);
			append_dev(g6, path19);
			append_dev(g6, path20);
			append_dev(g6, path21);
			append_dev(g6, path22);
			append_dev(g6, path23);
		},
		p: noop,
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(button);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$6.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$6($$self, $$props) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots('PlayStore', slots, []);
	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<PlayStore> was created with unknown prop '${key}'`);
	});

	return [];
}

class PlayStore extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$6, create_fragment$6, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "PlayStore",
			options,
			id: create_fragment$6.name
		});
	}
}

/* src/components/DownloadApp.svelte generated by Svelte v3.45.0 */
const file$4 = "src/components/DownloadApp.svelte";

function create_fragment$5(ctx) {
	let div;
	let appstore;
	let t;
	let playstore;
	let current;
	appstore = new AppStore({ $$inline: true });
	playstore = new PlayStore({ $$inline: true });

	const block = {
		c: function create() {
			div = element("div");
			create_component(appstore.$$.fragment);
			t = space();
			create_component(playstore.$$.fragment);
			attr_dev(div, "class", "flex w-full justify-center md:justify-start pb-24 lg:pb-0 fade-in");
			add_location(div, file$4, 5, 0, 126);
		},
		l: function claim(nodes) {
			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
		},
		m: function mount(target, anchor) {
			insert_dev(target, div, anchor);
			mount_component(appstore, div, null);
			append_dev(div, t);
			mount_component(playstore, div, null);
			current = true;
		},
		p: noop,
		i: function intro(local) {
			if (current) return;
			transition_in(appstore.$$.fragment, local);
			transition_in(playstore.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(appstore.$$.fragment, local);
			transition_out(playstore.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(div);
			destroy_component(appstore);
			destroy_component(playstore);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$5.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$5($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots('DownloadApp', slots, []);
	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<DownloadApp> was created with unknown prop '${key}'`);
	});

	$$self.$capture_state = () => ({ AppStore, PlayStore });
	return [];
}

class DownloadApp extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$5, create_fragment$5, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "DownloadApp",
			options,
			id: create_fragment$5.name
		});
	}
}

/* src/components/DevicesBackground.svelte generated by Svelte v3.45.0 */

const file$3 = "src/components/DevicesBackground.svelte";

function create_fragment$4(ctx) {
	let svg;
	let title;
	let t0;
	let desc;
	let t1;
	let defs;
	let g4;
	let g0;
	let path0;
	let path1;
	let rect0;
	let circle0;
	let circle1;
	let g2;
	let path2;
	let circle2;
	let g1;
	let path3;
	let path4;
	let rect1;
	let path5;
	let g3;
	let path6;
	let rect2;
	let path7;
	let circle3;
	let ellipse;

	const block = {
		c: function create() {
			svg = svg_element("svg");
			title = svg_element("title");
			t0 = text("IPAD 2");
			desc = svg_element("desc");
			t1 = text("Created with Sketch.");
			defs = svg_element("defs");
			g4 = svg_element("g");
			g0 = svg_element("g");
			path0 = svg_element("path");
			path1 = svg_element("path");
			rect0 = svg_element("rect");
			circle0 = svg_element("circle");
			circle1 = svg_element("circle");
			g2 = svg_element("g");
			path2 = svg_element("path");
			circle2 = svg_element("circle");
			g1 = svg_element("g");
			path3 = svg_element("path");
			path4 = svg_element("path");
			rect1 = svg_element("rect");
			path5 = svg_element("path");
			g3 = svg_element("g");
			path6 = svg_element("path");
			rect2 = svg_element("rect");
			path7 = svg_element("path");
			circle3 = svg_element("circle");
			ellipse = svg_element("ellipse");
			add_location(title, file$3, 9, 2, 317);
			add_location(desc, file$3, 10, 2, 341);
			add_location(defs, file$3, 11, 2, 377);
			attr_dev(path0, "d", "M202.986,317 L12.097,317 C5.462,317 0.083,311.623 0.083,304.99 L0.083,12.093 C0.083,5.46 5.461,0.083 12.097,0.083 L202.986,0.083 C209.622,0.083 215,5.46 215,12.093 L215,304.99 C215,311.623 209.622,317 202.986,317 Z");
			attr_dev(path0, "id", "bezel");
			attr_dev(path0, "stroke-width", "2");
			attr_dev(path0, "fill", "#FDFDFD");
			attr_dev(path0, "sketch:type", "MSShapeGroup");
			add_location(path0, file$3, 26, 6, 662);
			attr_dev(path1, "d", "M202.986,317 L12.097,317 C5.462,317 0.083,311.623 0.083,304.99 L0.083,12.093 C0.083,5.46 5.461,0.083 12.097,0.083 L202.986,0.083 C209.622,0.083 215,5.46 215,12.093 L215,304.99 C215,311.623 209.622,317 202.986,317 Z");
			attr_dev(path1, "id", "bezel-2");
			attr_dev(path1, "stroke-width", "2");
			attr_dev(path1, "fill", "#FDFDFD");
			attr_dev(path1, "sketch:type", "MSShapeGroup");
			add_location(path1, file$3, 32, 6, 1011);
			attr_dev(rect0, "id", "screen");
			attr_dev(rect0, "fill", "#FFFFFF");
			attr_dev(rect0, "sketch:type", "MSShapeGroup");
			attr_dev(rect0, "x", "17");
			attr_dev(rect0, "y", "32");
			attr_dev(rect0, "width", "181.999");
			attr_dev(rect0, "height", "252.917");
			add_location(rect0, file$3, 38, 6, 1362);
			attr_dev(circle0, "id", "lock");
			attr_dev(circle0, "sketch:type", "MSShapeGroup");
			attr_dev(circle0, "cx", "108.021");
			attr_dev(circle0, "cy", "300.021");
			attr_dev(circle0, "r", "8.021");
			add_location(circle0, file$3, 46, 6, 1539);
			attr_dev(circle1, "id", "camera");
			attr_dev(circle1, "sketch:type", "MSShapeGroup");
			attr_dev(circle1, "cx", "106.99");
			attr_dev(circle1, "cy", "16.99");
			attr_dev(circle1, "r", "2.99");
			add_location(circle1, file$3, 52, 6, 1676);
			attr_dev(g0, "id", "IPAD");
			attr_dev(g0, "sketch:type", "MSLayerGroup");
			attr_dev(g0, "transform", "translate(681.000000, 55.000000)");
			attr_dev(g0, "stroke", "#7E89A3");
			add_location(g0, file$3, 20, 4, 524);
			attr_dev(path2, "d", "M594,0 L98,0 C84.50415,0 73,11.0738184 73,24.7901127 L73,351.027995 L619,351.027985 L619,24.7901127 C618.999971,11.0728209 607.537479,0 594,0 Z");
			attr_dev(path2, "id", "bezel");
			attr_dev(path2, "stroke-width", "2");
			attr_dev(path2, "fill", "#FEFEFE");
			attr_dev(path2, "sketch:type", "MSShapeGroup");
			add_location(path2, file$3, 65, 6, 1955);
			attr_dev(circle2, "id", "webcam");
			attr_dev(circle2, "stroke-width", "2");
			attr_dev(circle2, "sketch:type", "MSShapeGroup");
			attr_dev(circle2, "cx", "347");
			attr_dev(circle2, "cy", "19");
			attr_dev(circle2, "r", "4");
			add_location(circle2, file$3, 71, 6, 2233);
			attr_dev(path3, "d", "M640.812,31.01 L51.288,31.01 C20.641,31.01 0,20.494 0,16.022 L0,2.428 C0,1.084 1.335,0 2.995,0 L689.104,0 C690.766,0 692.103,1.084 692.103,2.428 L692.103,16.557 C692.096,20.092 676.112,31.01 640.812,31.01 Z");
			attr_dev(path3, "id", "Shape");
			attr_dev(path3, "stroke-width", "2");
			attr_dev(path3, "fill", "#FDFDFD");
			add_location(path3, file$3, 83, 8, 2510);
			attr_dev(path4, "d", "M0.5,14.5 L690.242676,14.5");
			attr_dev(path4, "id", "Line");
			attr_dev(path4, "stroke-linecap", "square");
			add_location(path4, file$3, 88, 8, 2826);
			attr_dev(g1, "id", "bottom");
			attr_dev(g1, "transform", "translate(0.000000, 351.000000)");
			attr_dev(g1, "sketch:type", "MSShapeGroup");
			add_location(g1, file$3, 78, 6, 2384);
			attr_dev(rect1, "id", "screen");
			attr_dev(rect1, "fill", "#FFFFFF");
			attr_dev(rect1, "sketch:type", "MSShapeGroup");
			attr_dev(rect1, "x", "95");
			attr_dev(rect1, "y", "39");
			attr_dev(rect1, "width", "501.073853");
			attr_dev(rect1, "height", "292.009");
			add_location(rect1, file$3, 91, 6, 2931);
			attr_dev(path5, "d", "M421,352 L421,355.087 C421,357.288 416.666719,357.952714 413.386719,357.952714 L278.815286,357.952714 C275.364286,357.952714 271,357.289 271,355.087 L271,352");
			attr_dev(path5, "id", "touchpad");
			attr_dev(path5, "fill", "#FFFFFF");
			attr_dev(path5, "sketch:type", "MSShapeGroup");
			add_location(path5, file$3, 99, 6, 3111);
			attr_dev(g2, "id", "Laptop");
			attr_dev(g2, "sketch:type", "MSLayerGroup");
			attr_dev(g2, "transform", "translate(1.000000, 1.000000)");
			attr_dev(g2, "stroke", "#8492A5");
			add_location(g2, file$3, 59, 4, 1818);
			attr_dev(path6, "d", "M130,257.964 C130,266.797 122.809,273.956 113.938,273.956 L16.063,273.956 C7.192,273.956 0.001,266.797 0.001,257.964 L0.001,16.073 C0.001,7.24 7.192,0.081 16.063,0.081 L113.938,0.081 C122.809,0.081 130,7.24 130,16.073 L130,257.964 L130,257.964 Z");
			attr_dev(path6, "id", "bezel");
			attr_dev(path6, "stroke-width", "2");
			attr_dev(path6, "fill", "#FDFDFD");
			attr_dev(path6, "sketch:type", "MSShapeGroup");
			add_location(path6, file$3, 111, 6, 3529);
			attr_dev(rect2, "id", "screen");
			attr_dev(rect2, "fill", "#FFFFFF");
			attr_dev(rect2, "sketch:type", "MSShapeGroup");
			attr_dev(rect2, "x", "9");
			attr_dev(rect2, "y", "36");
			attr_dev(rect2, "width", "111.93");
			attr_dev(rect2, "height", "199.084");
			add_location(rect2, file$3, 117, 6, 3909);
			attr_dev(path7, "d", "M77,25.746 C77,26.381 76.561,26.893 76.02,26.893 L55.918,26.893 C55.376,26.893 54.938,26.38 54.938,25.746 L54.938,23.166 C54.938,22.531 55.377,22.019 55.918,22.019 L76.02,22.019 C76.561,22.019 77,22.532 77,23.166 L77,25.746 L77,25.746 Z");
			attr_dev(path7, "id", "speaker");
			attr_dev(path7, "sketch:type", "MSShapeGroup");
			add_location(path7, file$3, 125, 6, 4084);
			attr_dev(circle3, "id", "camera");
			attr_dev(circle3, "sketch:type", "MSShapeGroup");
			attr_dev(circle3, "cx", "66");
			attr_dev(circle3, "cy", "12");
			attr_dev(circle3, "r", "3");
			add_location(circle3, file$3, 129, 6, 4409);
			attr_dev(ellipse, "id", "lock");
			attr_dev(ellipse, "sketch:type", "MSShapeGroup");
			attr_dev(ellipse, "cx", "65.04");
			attr_dev(ellipse, "cy", "254.001");
			attr_dev(ellipse, "rx", "10.04");
			attr_dev(ellipse, "ry", "10.001");
			add_location(ellipse, file$3, 131, 6, 4501);
			attr_dev(g3, "id", "iphone");
			attr_dev(g3, "sketch:type", "MSLayerGroup");
			attr_dev(g3, "transform", "translate(576.000000, 177.000000)");
			attr_dev(g3, "stroke", "#7E89A3");
			add_location(g3, file$3, 105, 4, 3388);
			attr_dev(g4, "id", "Page-1");
			attr_dev(g4, "stroke", "none");
			attr_dev(g4, "stroke-width", "1");
			attr_dev(g4, "fill", "none");
			attr_dev(g4, "fill-rule", "evenodd");
			attr_dev(g4, "sketch:type", "MSPage");
			add_location(g4, file$3, 12, 2, 393);
			attr_dev(svg, "class", "w-5/6 mx-auto lg:mr-0 slide-in-bottom");
			attr_dev(svg, "viewBox", "0 0 897 452");
			attr_dev(svg, "version", "1.1");
			attr_dev(svg, "xmlns", "http://www.w3.org/2000/svg");
			attr_dev(svg, "xmlns:xlink", "http://www.w3.org/1999/xlink");
			attr_dev(svg, "xmlns:sketch", "http://www.bohemiancoding.com/sketch/ns");
			add_location(svg, file$3, 0, 0, 0);
		},
		l: function claim(nodes) {
			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
		},
		m: function mount(target, anchor) {
			insert_dev(target, svg, anchor);
			append_dev(svg, title);
			append_dev(title, t0);
			append_dev(svg, desc);
			append_dev(desc, t1);
			append_dev(svg, defs);
			append_dev(svg, g4);
			append_dev(g4, g0);
			append_dev(g0, path0);
			append_dev(g0, path1);
			append_dev(g0, rect0);
			append_dev(g0, circle0);
			append_dev(g0, circle1);
			append_dev(g4, g2);
			append_dev(g2, path2);
			append_dev(g2, circle2);
			append_dev(g2, g1);
			append_dev(g1, path3);
			append_dev(g1, path4);
			append_dev(g2, rect1);
			append_dev(g2, path5);
			append_dev(g4, g3);
			append_dev(g3, path6);
			append_dev(g3, rect2);
			append_dev(g3, path7);
			append_dev(g3, circle3);
			append_dev(g3, ellipse);
		},
		p: noop,
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(svg);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$4.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$4($$self, $$props) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots('DevicesBackground', slots, []);
	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<DevicesBackground> was created with unknown prop '${key}'`);
	});

	return [];
}

class DevicesBackground extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$4, create_fragment$4, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "DevicesBackground",
			options,
			id: create_fragment$4.name
		});
	}
}

/* src/components/Footer.svelte generated by Svelte v3.45.0 */
const file$2 = "src/components/Footer.svelte";

function create_fragment$3(ctx) {
	let footer;
	let a;
	let mounted;
	let dispose;

	const block = {
		c: function create() {
			footer = element("footer");
			a = element("a");
			a.textContent = "© Fuzznets P.C. 2022";
			attr_dev(a, "class", "text-gray-500 no-underline hover:no-underline");
			attr_dev(a, "href", "/copyright");
			add_location(a, file$2, 5, 2, 142);
			attr_dev(footer, "class", "w-full pt-16 pb-6 text-sm text-center md:text-left fade-in");
			add_location(footer, file$2, 4, 0, 64);
		},
		l: function claim(nodes) {
			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
		},
		m: function mount(target, anchor) {
			insert_dev(target, footer, anchor);
			append_dev(footer, a);

			if (!mounted) {
				dispose = action_destroyer(link.call(null, a));
				mounted = true;
			}
		},
		p: noop,
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(footer);
			mounted = false;
			dispose();
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$3.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$3($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots('Footer', slots, []);
	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<Footer> was created with unknown prop '${key}'`);
	});

	$$self.$capture_state = () => ({ link });
	return [];
}

class Footer extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$3, create_fragment$3, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Footer",
			options,
			id: create_fragment$3.name
		});
	}
}

/* src/routes/Home.svelte generated by Svelte v3.45.0 */
const file$1 = "src/routes/Home.svelte";

function create_fragment$2(ctx) {
	let div2;
	let div0;
	let h1;
	let t1;
	let p0;
	let t3;
	let p1;
	let t5;
	let downloadapp;
	let t6;
	let div1;
	let devicesbackground;
	let t7;
	let footer;
	let div2_transition;
	let current;
	downloadapp = new DownloadApp({ $$inline: true });
	devicesbackground = new DevicesBackground({ $$inline: true });
	footer = new Footer({ $$inline: true });

	const block = {
		c: function create() {
			div2 = element("div");
			div0 = element("div");
			h1 = element("h1");
			h1.textContent = "Blockchain-based deliberative democracy platform.";
			t1 = space();
			p0 = element("p");
			p0.textContent = "Liquid voting and tokenomics based dynamic parliamentary democracy for the\n      internet age.";
			t3 = space();
			p1 = element("p");
			p1.textContent = "Download our app:";
			t5 = space();
			create_component(downloadapp.$$.fragment);
			t6 = space();
			div1 = element("div");
			create_component(devicesbackground.$$.fragment);
			t7 = space();
			create_component(footer.$$.fragment);
			attr_dev(h1, "class", "my-4 text-3xl md:text-5xl text-purple-800 font-bold leading-tight text-center md:text-left slide-in-bottom-h1");
			add_location(h1, file$1, 16, 4, 498);
			attr_dev(p0, "class", "leading-normal text-base md:text-2xl mb-8 text-center md:text-left slide-in-bottom-subtitle");
			add_location(p0, file$1, 21, 4, 702);
			attr_dev(p1, "class", "text-blue-400 font-bold pb-8 lg:pb-6 text-center md:text-left fade-in");
			add_location(p1, file$1, 28, 4, 932);
			attr_dev(div0, "class", "flex flex-col w-full xl:w-2/5 justify-center lg:items-start overflow-y-hidden");
			add_location(div0, file$1, 13, 2, 395);
			attr_dev(div1, "class", "w-full xl:w-3/5 py-6 overflow-y-hidden");
			add_location(div1, file$1, 38, 2, 1110);
			attr_dev(div2, "class", "container pt-24 md:pt-48 px-6 mx-auto flex flex-wrap flex-col md:flex-row items-center");
			add_location(div2, file$1, 8, 0, 253);
		},
		l: function claim(nodes) {
			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
		},
		m: function mount(target, anchor) {
			insert_dev(target, div2, anchor);
			append_dev(div2, div0);
			append_dev(div0, h1);
			append_dev(div0, t1);
			append_dev(div0, p0);
			append_dev(div0, t3);
			append_dev(div0, p1);
			append_dev(div0, t5);
			mount_component(downloadapp, div0, null);
			append_dev(div2, t6);
			append_dev(div2, div1);
			mount_component(devicesbackground, div1, null);
			append_dev(div2, t7);
			mount_component(footer, div2, null);
			current = true;
		},
		p: noop,
		i: function intro(local) {
			if (current) return;
			transition_in(downloadapp.$$.fragment, local);
			transition_in(devicesbackground.$$.fragment, local);
			transition_in(footer.$$.fragment, local);

			add_render_callback(() => {
				if (!div2_transition) div2_transition = create_bidirectional_transition(div2, fade, {}, true);
				div2_transition.run(1);
			});

			current = true;
		},
		o: function outro(local) {
			transition_out(downloadapp.$$.fragment, local);
			transition_out(devicesbackground.$$.fragment, local);
			transition_out(footer.$$.fragment, local);
			if (!div2_transition) div2_transition = create_bidirectional_transition(div2, fade, {}, false);
			div2_transition.run(0);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(div2);
			destroy_component(downloadapp);
			destroy_component(devicesbackground);
			destroy_component(footer);
			if (detaching && div2_transition) div2_transition.end();
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$2.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$2($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots('Home', slots, []);
	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<Home> was created with unknown prop '${key}'`);
	});

	$$self.$capture_state = () => ({
		fade,
		DownloadApp,
		DevicesBackground,
		Footer
	});

	return [];
}

class Home extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$2, create_fragment$2, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Home",
			options,
			id: create_fragment$2.name
		});
	}
}

/* src/routes/NotFound.svelte generated by Svelte v3.45.0 */
const file = "src/routes/NotFound.svelte";

function create_fragment$1(ctx) {
	let div;
	let h1;
	let t1;
	let p;
	let div_transition;
	let current;

	const block = {
		c: function create() {
			div = element("div");
			h1 = element("h1");
			h1.textContent = "404";
			t1 = space();
			p = element("p");
			p.textContent = "Uh oh. Page is not found.";
			attr_dev(h1, "class", "text-red-500 text-6xl text-center font-thin my-8");
			add_location(h1, file, 5, 2, 101);
			attr_dev(p, "class", "text-center mx-4");
			add_location(p, file, 6, 2, 173);
			attr_dev(div, "class", "page");
			add_location(div, file, 4, 0, 64);
		},
		l: function claim(nodes) {
			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
		},
		m: function mount(target, anchor) {
			insert_dev(target, div, anchor);
			append_dev(div, h1);
			append_dev(div, t1);
			append_dev(div, p);
			current = true;
		},
		p: noop,
		i: function intro(local) {
			if (current) return;

			add_render_callback(() => {
				if (!div_transition) div_transition = create_bidirectional_transition(div, fade, {}, true);
				div_transition.run(1);
			});

			current = true;
		},
		o: function outro(local) {
			if (!div_transition) div_transition = create_bidirectional_transition(div, fade, {}, false);
			div_transition.run(0);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(div);
			if (detaching && div_transition) div_transition.end();
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$1.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$1($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots('NotFound', slots, []);
	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<NotFound> was created with unknown prop '${key}'`);
	});

	$$self.$capture_state = () => ({ fade });
	return [];
}

class NotFound extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$1, create_fragment$1, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "NotFound",
			options,
			id: create_fragment$1.name
		});
	}
}

/* src/App.svelte generated by Svelte v3.45.0 */

function create_fragment(ctx) {
	let header;
	let t;
	let router;
	let current;
	header = new Header({ $$inline: true });

	router = new Router({
			props: {
				routes: /*routes*/ ctx[0],
				restoreScrollState: true
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			create_component(header.$$.fragment);
			t = space();
			create_component(router.$$.fragment);
		},
		l: function claim(nodes) {
			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
		},
		m: function mount(target, anchor) {
			mount_component(header, target, anchor);
			insert_dev(target, t, anchor);
			mount_component(router, target, anchor);
			current = true;
		},
		p: noop,
		i: function intro(local) {
			if (current) return;
			transition_in(header.$$.fragment, local);
			transition_in(router.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(header.$$.fragment, local);
			transition_out(router.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			destroy_component(header, detaching);
			if (detaching) detach_dev(t);
			destroy_component(router, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots('App', slots, []);

	const routes = {
		// Exact path
		'/': Home,
		'/about': wrap({
			asyncComponent: () => import('./About-3ad84cd9.js')
		}),
		'/landing': wrap({
			asyncComponent: () => import('./Landing-bc7d4354.js')
		}),
		// Using named parameters, with last being optional
		/* '/author/:first/:last?': Author, */
		// Wildcard parameter
		/* '/book/*': Book, */
		// Catch-all
		// This is optional, but if present it must be the last
		'*': NotFound
	};

	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<App> was created with unknown prop '${key}'`);
	});

	$$self.$capture_state = () => ({
		Router,
		wrap,
		Header,
		Home,
		NotFound,
		routes
	});

	return [routes];
}

class App extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "App",
			options,
			id: create_fragment.name
		});
	}
}

const app = new App({
    target: document.body,
    props: {
        name: 'world',
    },
});

export { app as default };
//# sourceMappingURL=index.js.map
